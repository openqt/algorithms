{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sessionId": "0", 
    "sampleTestCase": "[[1,3],[6,9]]\n[2,5]", 
    "questionFrontendId": "57", 
    "contributors": "[]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n  \"name\": \"insert\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"intervals\",\r\n      \"type\": \"list<Interval>\"\r\n    },\r\n    {\r\n      \"name\": \"newInterval\",\r\n      \"type\": \"Interval\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"list<Interval>\"\r\n  }\r\n}", 
    "questionDetailUrl": "/problems/insert-interval/", 
    "stats": "{\"totalAccepted\": \"132.1K\", \"totalSubmission\": \"450.6K\", \"acRate\": \"29.3%\"}", 
    "interpretUrl": "/problems/insert-interval/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "array", 
        "name": "Array"
      }, 
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "sort", 
        "name": "Sort"
      }
    ], 
    "content": "<p>Given a set of <em>non-overlapping</em> intervals, insert a new interval into the intervals (merge if necessary).</p>\r\n\r\n<p>You may assume that the intervals were initially sorted according to their start times.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5]\r\n<strong>Output:</strong> [[1,5],[6,9]]\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> intervals = <code>[[1,2],[3,5],[6,7],[8,10],[12,16]]</code>, newInterval = <code>[4,8]</code>\r\n<strong>Output:</strong> [[1,2],[3,10],[12,16]]\r\n<strong>Explanation:</strong> Because the new interval <code>[4,8]</code> overlaps with <code>[3,5],[6,7],[8,10]</code>.</pre>\r\n", 
    "enableTestMode": false, 
    "submitUrl": "/problems/insert-interval/submit/", 
    "questionId": "57", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"swift\": [\"Swift\", \"<p>Compiled with <code>swift 4.1.2</code>.</p>\\r\\n\\r\\n<p>We usually keep up with the <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">latest Swift released by Apple</a>, if not please let us know and we will update it as soon as possible!</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Hard", 
    "allowDiscuss": true, 
    "article": "{}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * struct Interval {\\r\\n *     int start;\\r\\n *     int end;\\r\\n *     Interval() : start(0), end(0) {}\\r\\n *     Interval(int s, int e) : start(s), end(e) {}\\r\\n * };\\r\\n */\\r\\nclass Solution {\\r\\npublic:\\r\\n    vector<Interval> insert(vector<Interval>& intervals, Interval newInterval) {\\r\\n        \\r\\n    }\\r\\n};\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * public class Interval {\\r\\n *     int start;\\r\\n *     int end;\\r\\n *     Interval() { start = 0; end = 0; }\\r\\n *     Interval(int s, int e) { start = s; end = e; }\\r\\n * }\\r\\n */\\r\\nclass Solution {\\r\\n    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"# Definition for an interval.\\r\\n# class Interval(object):\\r\\n#     def __init__(self, s=0, e=0):\\r\\n#         self.start = s\\r\\n#         self.end = e\\r\\n\\r\\nclass Solution(object):\\r\\n    def insert(self, intervals, newInterval):\\r\\n        \\\"\\\"\\\"\\r\\n        :type intervals: List[Interval]\\r\\n        :type newInterval: Interval\\r\\n        :rtype: List[Interval]\\r\\n        \\\"\\\"\\\"\\r\\n        \"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"# Definition for an interval.\\r\\n# class Interval:\\r\\n#     def __init__(self, s=0, e=0):\\r\\n#         self.start = s\\r\\n#         self.end = e\\r\\n\\r\\nclass Solution:\\r\\n    def insert(self, intervals, newInterval):\\r\\n        \\\"\\\"\\\"\\r\\n        :type intervals: List[Interval]\\r\\n        :type newInterval: Interval\\r\\n        :rtype: List[Interval]\\r\\n        \\\"\\\"\\\"\\r\\n        \"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * struct Interval {\\r\\n *     int start;\\r\\n *     int end;\\r\\n * };\\r\\n */\\r\\n/**\\r\\n * Return an array of size *returnSize.\\r\\n * Note: The returned array must be malloced, assume caller calls free().\\r\\n */\\r\\nstruct Interval* insert(struct Interval* intervals, int intervalsSize, struct Interval newInterval, int* returnSize) {\\r\\n    \\r\\n}\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * public class Interval {\\r\\n *     public int start;\\r\\n *     public int end;\\r\\n *     public Interval() { start = 0; end = 0; }\\r\\n *     public Interval(int s, int e) { start = s; end = e; }\\r\\n * }\\r\\n */\\r\\npublic class Solution {\\r\\n    public IList<Interval> Insert(IList<Interval> intervals, Interval newInterval) {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * function Interval(start, end) {\\r\\n *     this.start = start;\\r\\n *     this.end = end;\\r\\n * }\\r\\n */\\r\\n/**\\r\\n * @param {Interval[]} intervals\\r\\n * @param {Interval} newInterval\\r\\n * @return {Interval[]}\\r\\n */\\r\\nvar insert = function(intervals, newInterval) {\\r\\n    \\r\\n};\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"# Definition for an interval.\\r\\n# class Interval\\r\\n#     attr_accessor :start, :end\\r\\n#     def initialize(s=0, e=0)\\r\\n#         @start = s\\r\\n#         @end = e\\r\\n#     end\\r\\n# end\\r\\n\\r\\n# @param {Interval[]} intervals\\r\\n# @param {Interval} new_interval\\r\\n# @return {Interval[]}\\r\\ndef insert(intervals, new_interval)\\r\\n    \\r\\nend\"}, {\"value\": \"swift\", \"text\": \"Swift\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * public class Interval {\\r\\n *   public var start: Int\\r\\n *   public var end: Int\\r\\n *   public init(_ start: Int, _ end: Int) {\\r\\n *     self.start = start\\r\\n *     self.end = end\\r\\n *   }\\r\\n * }\\r\\n */\\r\\nclass Solution {\\r\\n    func insert(_ intervals: [Interval], _ newInterval: Interval) -> [Interval] {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * type Interval struct {\\r\\n *\\t   Start int\\r\\n *\\t   End   int\\r\\n * }\\r\\n */\\r\\nfunc insert(intervals []Interval, newInterval Interval) []Interval {\\r\\n    \\r\\n}\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * class Interval(var _start: Int = 0, var _end: Int = 0) {\\r\\n *   var start: Int = _start\\r\\n *   var end: Int = _end\\r\\n * }\\r\\n */\\r\\nobject Solution {\\r\\n    def insert(intervals: List[Interval], newInterval: Interval): List[Interval] = {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"/**\\r\\n * Definition for an interval.\\r\\n * class Interval(\\r\\n *     var start: Int = 0,\\r\\n *     var end: Int = 0\\r\\n * )\\r\\n */\\r\\nclass Solution {\\r\\n    fun insert(intervals: List<Interval>, newInterval: Interval): List<Interval> {\\r\\n        \\r\\n    }\\r\\n}\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "insert-interval", 
    "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", 
    "libraryUrl": null, 
    "enableRunCode": true, 
    "questionTitle": "Insert Interval", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}