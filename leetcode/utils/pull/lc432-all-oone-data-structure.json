{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sessionId": "0", 
    "sampleTestCase": "[\"AllOne\",\"getMaxKey\",\"getMinKey\"]\n[[],[],[]]", 
    "questionFrontendId": "432", 
    "contributors": "[{\"username\": \"galster\", \"profileUrl\": \"/galster/\"}, {\"username\": \"1337c0d3r\", \"profileUrl\": \"/1337c0d3r/\"}]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n    \"classname\": \"AllOne\",\r\n    \"constructor\": {\r\n        \"params\": [\r\n        ],\r\n        \"comment\": \"Initialize your data structure here.\"\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"inc\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"string\",\r\n                    \"name\": \"key\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            },\r\n            \"comment\": \"Inserts a new key <Key> with value 1. Or increments an existing key by 1.\"\r\n        },\r\n        {\r\n            \"name\" : \"dec\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"string\",\r\n                    \"name\": \"key\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            },\r\n            \"comment\": \"Decrements an existing key by 1. If Key's value is 1, remove it from the data structure.\"\r\n        },\r\n        {\r\n            \"name\" : \"getMaxKey\",\r\n            \"params\": [\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"string\"\r\n            },\r\n            \"comment\": \"Returns one of the keys with maximal value.\"\r\n        },\r\n        {\r\n            \"name\" : \"getMinKey\",\r\n            \"params\": [\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"string\"\r\n            },\r\n            \"comment\": \"Returns one of the keys with Minimal value.\"\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}", 
    "questionDetailUrl": "/problems/all-oone-data-structure/", 
    "stats": "{\"totalAccepted\": \"10.3K\", \"totalSubmission\": \"37.1K\", \"acRate\": \"27.9%\"}", 
    "interpretUrl": "/problems/all-oone-data-structure/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "slug": "design", 
        "__typename": "TopicTagNode", 
        "name": "Design"
      }
    ], 
    "content": "<p>Implement a data structure supporting the following operations:</p>\r\n\r\n<p>\r\n<ol>\r\n<li>Inc(Key) - Inserts a new key <Key> with value 1. Or increments an existing key by 1. Key is guaranteed to be a <b>non-empty</b> string.</li>\r\n<li>Dec(Key) - If Key's value is 1, remove it from the data structure. Otherwise decrements an existing key by 1. If the key does not exist, this function does nothing. Key is guaranteed to be a <b>non-empty</b> string.</li>\r\n<li>GetMaxKey() - Returns one of the keys with maximal value. If no element exists, return an empty string <code>\"\"</code>.</li>\r\n<li>GetMinKey() - Returns one of the keys with minimal value. If no element exists, return an empty string <code>\"\"</code>.</li>\r\n</ol>\r\n</p>\r\n\r\n<p>\r\nChallenge: Perform all these in O(1) time complexity.\r\n</p>", 
    "enableTestMode": false, 
    "submitUrl": "/problems/all-oone-data-structure/submit/", 
    "questionId": "432", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Hard", 
    "allowDiscuss": true, 
    "article": "{}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class AllOne {\\r\\npublic:\\r\\n    /** Initialize your data structure here. */\\r\\n    AllOne() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Inserts a new key <Key> with value 1. Or increments an existing key by 1. */\\r\\n    void inc(string key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Decrements an existing key by 1. If Key's value is 1, remove it from the data structure. */\\r\\n    void dec(string key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns one of the keys with maximal value. */\\r\\n    string getMaxKey() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns one of the keys with Minimal value. */\\r\\n    string getMinKey() {\\r\\n        \\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Your AllOne object will be instantiated and called as such:\\r\\n * AllOne obj = new AllOne();\\r\\n * obj.inc(key);\\r\\n * obj.dec(key);\\r\\n * string param_3 = obj.getMaxKey();\\r\\n * string param_4 = obj.getMinKey();\\r\\n */\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class AllOne {\\r\\n\\r\\n    /** Initialize your data structure here. */\\r\\n    public AllOne() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Inserts a new key <Key> with value 1. Or increments an existing key by 1. */\\r\\n    public void inc(String key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Decrements an existing key by 1. If Key's value is 1, remove it from the data structure. */\\r\\n    public void dec(String key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns one of the keys with maximal value. */\\r\\n    public String getMaxKey() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns one of the keys with Minimal value. */\\r\\n    public String getMinKey() {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your AllOne object will be instantiated and called as such:\\r\\n * AllOne obj = new AllOne();\\r\\n * obj.inc(key);\\r\\n * obj.dec(key);\\r\\n * String param_3 = obj.getMaxKey();\\r\\n * String param_4 = obj.getMinKey();\\r\\n */\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class AllOne(object):\\r\\n\\r\\n    def __init__(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Initialize your data structure here.\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def inc(self, key):\\r\\n        \\\"\\\"\\\"\\r\\n        Inserts a new key <Key> with value 1. Or increments an existing key by 1.\\r\\n        :type key: str\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def dec(self, key):\\r\\n        \\\"\\\"\\\"\\r\\n        Decrements an existing key by 1. If Key's value is 1, remove it from the data structure.\\r\\n        :type key: str\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def getMaxKey(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Returns one of the keys with maximal value.\\r\\n        :rtype: str\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def getMinKey(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Returns one of the keys with Minimal value.\\r\\n        :rtype: str\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your AllOne object will be instantiated and called as such:\\r\\n# obj = AllOne()\\r\\n# obj.inc(key)\\r\\n# obj.dec(key)\\r\\n# param_3 = obj.getMaxKey()\\r\\n# param_4 = obj.getMinKey()\"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class AllOne:\\r\\n\\r\\n    def __init__(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Initialize your data structure here.\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def inc(self, key):\\r\\n        \\\"\\\"\\\"\\r\\n        Inserts a new key <Key> with value 1. Or increments an existing key by 1.\\r\\n        :type key: str\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def dec(self, key):\\r\\n        \\\"\\\"\\\"\\r\\n        Decrements an existing key by 1. If Key's value is 1, remove it from the data structure.\\r\\n        :type key: str\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def getMaxKey(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Returns one of the keys with maximal value.\\r\\n        :rtype: str\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def getMinKey(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Returns one of the keys with Minimal value.\\r\\n        :rtype: str\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your AllOne object will be instantiated and called as such:\\r\\n# obj = AllOne()\\r\\n# obj.inc(key)\\r\\n# obj.dec(key)\\r\\n# param_3 = obj.getMaxKey()\\r\\n# param_4 = obj.getMinKey()\"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"typedef struct {\\r\\n    \\r\\n} AllOne;\\r\\n\\r\\n/** Initialize your data structure here. */\\r\\nAllOne* allOneCreate() {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Inserts a new key <Key> with value 1. Or increments an existing key by 1. */\\r\\nvoid allOneInc(AllOne* obj, char* key) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Decrements an existing key by 1. If Key's value is 1, remove it from the data structure. */\\r\\nvoid allOneDec(AllOne* obj, char* key) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Returns one of the keys with maximal value. */\\r\\nchar* allOneGetMaxKey(AllOne* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Returns one of the keys with Minimal value. */\\r\\nchar* allOneGetMinKey(AllOne* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\nvoid allOneFree(AllOne* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\n/**\\r\\n * Your AllOne struct will be instantiated and called as such:\\r\\n * struct AllOne* obj = allOneCreate();\\r\\n * allOneInc(obj, key);\\r\\n * allOneDec(obj, key);\\r\\n * char* param_3 = allOneGetMaxKey(obj);\\r\\n * char* param_4 = allOneGetMinKey(obj);\\r\\n * allOneFree(obj);\\r\\n */\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class AllOne {\\r\\n\\r\\n    /** Initialize your data structure here. */\\r\\n    public AllOne() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Inserts a new key <Key> with value 1. Or increments an existing key by 1. */\\r\\n    public void Inc(string key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Decrements an existing key by 1. If Key's value is 1, remove it from the data structure. */\\r\\n    public void Dec(string key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns one of the keys with maximal value. */\\r\\n    public string GetMaxKey() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns one of the keys with Minimal value. */\\r\\n    public string GetMinKey() {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your AllOne object will be instantiated and called as such:\\r\\n * AllOne obj = new AllOne();\\r\\n * obj.Inc(key);\\r\\n * obj.Dec(key);\\r\\n * string param_3 = obj.GetMaxKey();\\r\\n * string param_4 = obj.GetMinKey();\\r\\n */\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * Initialize your data structure here.\\r\\n */\\r\\nvar AllOne = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Inserts a new key <Key> with value 1. Or increments an existing key by 1. \\r\\n * @param {string} key\\r\\n * @return {void}\\r\\n */\\r\\nAllOne.prototype.inc = function(key) {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Decrements an existing key by 1. If Key's value is 1, remove it from the data structure. \\r\\n * @param {string} key\\r\\n * @return {void}\\r\\n */\\r\\nAllOne.prototype.dec = function(key) {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns one of the keys with maximal value.\\r\\n * @return {string}\\r\\n */\\r\\nAllOne.prototype.getMaxKey = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns one of the keys with Minimal value.\\r\\n * @return {string}\\r\\n */\\r\\nAllOne.prototype.getMinKey = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/** \\r\\n * Your AllOne object will be instantiated and called as such:\\r\\n * var obj = Object.create(AllOne).createNew()\\r\\n * obj.inc(key)\\r\\n * obj.dec(key)\\r\\n * var param_3 = obj.getMaxKey()\\r\\n * var param_4 = obj.getMinKey()\\r\\n */\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"class AllOne\\r\\n\\r\\n=begin\\r\\n    Initialize your data structure here.\\r\\n=end\\r\\n    def initialize()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Inserts a new key <Key> with value 1. Or increments an existing key by 1.\\r\\n    :type key: String\\r\\n    :rtype: Void\\r\\n=end\\r\\n    def inc(key)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Decrements an existing key by 1. If Key's value is 1, remove it from the data structure.\\r\\n    :type key: String\\r\\n    :rtype: Void\\r\\n=end\\r\\n    def dec(key)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Returns one of the keys with maximal value.\\r\\n    :rtype: String\\r\\n=end\\r\\n    def get_max_key()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Returns one of the keys with Minimal value.\\r\\n    :rtype: String\\r\\n=end\\r\\n    def get_min_key()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\nend\\r\\n\\r\\n# Your AllOne object will be instantiated and called as such:\\r\\n# obj = AllOne.new()\\r\\n# obj.inc(key)\\r\\n# obj.dec(key)\\r\\n# param_3 = obj.get_max_key()\\r\\n# param_4 = obj.get_min_key()\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"type AllOne struct {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Initialize your data structure here. */\\r\\nfunc Constructor() AllOne {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Inserts a new key <Key> with value 1. Or increments an existing key by 1. */\\r\\nfunc (this *AllOne) Inc(key string)  {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Decrements an existing key by 1. If Key's value is 1, remove it from the data structure. */\\r\\nfunc (this *AllOne) Dec(key string)  {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Returns one of the keys with maximal value. */\\r\\nfunc (this *AllOne) GetMaxKey() string {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Returns one of the keys with Minimal value. */\\r\\nfunc (this *AllOne) GetMinKey() string {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * Your AllOne object will be instantiated and called as such:\\r\\n * obj := Constructor();\\r\\n * obj.Inc(key);\\r\\n * obj.Dec(key);\\r\\n * param_3 := obj.GetMaxKey();\\r\\n * param_4 := obj.GetMinKey();\\r\\n */\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"class AllOne() {\\n\\n    /** Initialize your data structure here. */\\n    \\n\\n    /** Inserts a new key <Key> with value 1. Or increments an existing key by 1. */\\n    def inc(key: String) {\\n        \\n    }\\n\\n    /** Decrements an existing key by 1. If Key's value is 1, remove it from the data structure. */\\n    def dec(key: String) {\\n        \\n    }\\n\\n    /** Returns one of the keys with maximal value. */\\n    def getMaxKey(): String = {\\n        \\n    }\\n\\n    /** Returns one of the keys with Minimal value. */\\n    def getMinKey(): String = {\\n        \\n    }\\n\\n}\\n\\n/**\\n * Your AllOne object will be instantiated and called as such:\\n * var obj = new AllOne()\\n * obj.inc(key)\\n * obj.dec(key)\\n * var param_3 = obj.getMaxKey()\\n * var param_4 = obj.getMinKey()\\n */\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class AllOne() {\\n\\n    /** Initialize your data structure here. */\\n    \\n\\n    /** Inserts a new key <Key> with value 1. Or increments an existing key by 1. */\\n    fun inc(key: String) {\\n        \\n    }\\n\\n    /** Decrements an existing key by 1. If Key's value is 1, remove it from the data structure. */\\n    fun dec(key: String) {\\n        \\n    }\\n\\n    /** Returns one of the keys with maximal value. */\\n    fun getMaxKey(): String {\\n        \\n    }\\n\\n    /** Returns one of the keys with Minimal value. */\\n    fun getMinKey(): String {\\n        \\n    }\\n\\n}\\n\\n/**\\n * Your AllOne object will be instantiated and called as such:\\n * var obj = AllOne()\\n * obj.inc(key)\\n * obj.dec(key)\\n * var param_3 = obj.getMaxKey()\\n * var param_4 = obj.getMinKey()\\n */\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "all-oone-data-structure", 
    "similarQuestions": "[]", 
    "libraryUrl": null, 
    "enableRunCode": true, 
    "questionTitle": "All O`one Data Structure", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}