{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sampleTestCase": "[\"NumArray\",\"sumRange\",\"update\",\"sumRange\"]\n[[[1,3,5]],[0,2],[1,2],[0,2]]", 
    "questionFrontendId": "307", 
    "contributors": "[]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n    \"classname\": \"NumArray\",\r\n    \"maxbytesperline\": 170000,\r\n    \"constructor\": {\r\n        \"params\": [\r\n            {\r\n                \"type\": \"integer[]\",\r\n                \"name\": \"nums\"\r\n            },\r\n            {\r\n                \"type\": \"integer\",\r\n                \"name\": \"numsSize\",\r\n                \"lang\": \"c\",\r\n                \"value\": \"size_1\"\r\n            }\r\n        ]\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"update\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"i\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"val\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            }\r\n        },\r\n        {\r\n            \"name\" : \"sumRange\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"i\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"j\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"integer\"\r\n            }\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}", 
    "enableRunCode": true, 
    "questionDetailUrl": "/problems/range-sum-query-mutable/", 
    "stats": "{\"totalAccepted\": \"47K\", \"totalSubmission\": \"202.6K\", \"acRate\": \"23.2%\"}", 
    "interpretUrl": "/problems/range-sum-query-mutable/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "name": "Binary Indexed Tree", 
        "slug": "binary-indexed-tree"
      }, 
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "name": "Segment Tree", 
        "slug": "segment-tree"
      }
    ], 
    "content": "<p>Given an integer array <i>nums</i>, find the sum of the elements between indices <i>i</i> and <i>j</i> (<i>i</i> &le; <i>j</i>), inclusive.</p>\r\n\r\n<p>The <i>update(i, val)</i> function modifies <i>nums</i> by updating the element at index <i>i</i> to <i>val</i>.</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<pre>\r\nGiven nums = [1, 3, 5]\r\n\r\nsumRange(0, 2) -&gt; 9\r\nupdate(1, 2)\r\nsumRange(0, 2) -&gt; 8\r\n</pre>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<ol>\r\n\t<li>The array is only modifiable by the <i>update</i> function.</li>\r\n\t<li>You may assume the number of calls to <i>update</i> and <i>sumRange</i> function is distributed evenly.</li>\r\n</ol>\r\n", 
    "enableTestMode": false, 
    "submitUrl": "/problems/range-sum-query-mutable/submit/", 
    "questionId": "307", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Medium", 
    "allowDiscuss": true, 
    "article": "{\"id\": 29, \"url\": \"/articles/range-sum-query-mutable/\", \"topicId\": 127832}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class NumArray {\\r\\npublic:\\r\\n    NumArray(vector<int> nums) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    void update(int i, int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    int sumRange(int i, int j) {\\r\\n        \\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Your NumArray object will be instantiated and called as such:\\r\\n * NumArray obj = new NumArray(nums);\\r\\n * obj.update(i,val);\\r\\n * int param_2 = obj.sumRange(i,j);\\r\\n */\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class NumArray {\\r\\n\\r\\n    public NumArray(int[] nums) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    public void update(int i, int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    public int sumRange(int i, int j) {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your NumArray object will be instantiated and called as such:\\r\\n * NumArray obj = new NumArray(nums);\\r\\n * obj.update(i,val);\\r\\n * int param_2 = obj.sumRange(i,j);\\r\\n */\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class NumArray(object):\\r\\n\\r\\n    def __init__(self, nums):\\r\\n        \\\"\\\"\\\"\\r\\n        :type nums: List[int]\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def update(self, i, val):\\r\\n        \\\"\\\"\\\"\\r\\n        :type i: int\\r\\n        :type val: int\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def sumRange(self, i, j):\\r\\n        \\\"\\\"\\\"\\r\\n        :type i: int\\r\\n        :type j: int\\r\\n        :rtype: int\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your NumArray object will be instantiated and called as such:\\r\\n# obj = NumArray(nums)\\r\\n# obj.update(i,val)\\r\\n# param_2 = obj.sumRange(i,j)\"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class NumArray:\\r\\n\\r\\n    def __init__(self, nums):\\r\\n        \\\"\\\"\\\"\\r\\n        :type nums: List[int]\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def update(self, i, val):\\r\\n        \\\"\\\"\\\"\\r\\n        :type i: int\\r\\n        :type val: int\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def sumRange(self, i, j):\\r\\n        \\\"\\\"\\\"\\r\\n        :type i: int\\r\\n        :type j: int\\r\\n        :rtype: int\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your NumArray object will be instantiated and called as such:\\r\\n# obj = NumArray(nums)\\r\\n# obj.update(i,val)\\r\\n# param_2 = obj.sumRange(i,j)\"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"typedef struct {\\r\\n    \\r\\n} NumArray;\\r\\n\\r\\nNumArray* numArrayCreate(int* nums, int numsSize) {\\r\\n    \\r\\n}\\r\\n\\r\\nvoid numArrayUpdate(NumArray* obj, int i, int val) {\\r\\n    \\r\\n}\\r\\n\\r\\nint numArraySumRange(NumArray* obj, int i, int j) {\\r\\n    \\r\\n}\\r\\n\\r\\nvoid numArrayFree(NumArray* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\n/**\\r\\n * Your NumArray struct will be instantiated and called as such:\\r\\n * struct NumArray* obj = numArrayCreate(nums, numsSize);\\r\\n * numArrayUpdate(obj, i, val);\\r\\n * int param_2 = numArraySumRange(obj, i, j);\\r\\n * numArrayFree(obj);\\r\\n */\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class NumArray {\\r\\n\\r\\n    public NumArray(int[] nums) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    public void Update(int i, int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    public int SumRange(int i, int j) {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your NumArray object will be instantiated and called as such:\\r\\n * NumArray obj = new NumArray(nums);\\r\\n * obj.Update(i,val);\\r\\n * int param_2 = obj.SumRange(i,j);\\r\\n */\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * @param {number[]} nums\\r\\n */\\r\\nvar NumArray = function(nums) {\\r\\n    \\r\\n};\\r\\n\\r\\n/** \\r\\n * @param {number} i \\r\\n * @param {number} val\\r\\n * @return {void}\\r\\n */\\r\\nNumArray.prototype.update = function(i, val) {\\r\\n    \\r\\n};\\r\\n\\r\\n/** \\r\\n * @param {number} i \\r\\n * @param {number} j\\r\\n * @return {number}\\r\\n */\\r\\nNumArray.prototype.sumRange = function(i, j) {\\r\\n    \\r\\n};\\r\\n\\r\\n/** \\r\\n * Your NumArray object will be instantiated and called as such:\\r\\n * var obj = Object.create(NumArray).createNew(nums)\\r\\n * obj.update(i,val)\\r\\n * var param_2 = obj.sumRange(i,j)\\r\\n */\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"class NumArray\\r\\n\\r\\n=begin\\r\\n    :type nums: Integer[]\\r\\n=end\\r\\n    def initialize(nums)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    :type i: Integer\\r\\n    :type val: Integer\\r\\n    :rtype: Void\\r\\n=end\\r\\n    def update(i, val)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    :type i: Integer\\r\\n    :type j: Integer\\r\\n    :rtype: Integer\\r\\n=end\\r\\n    def sum_range(i, j)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\nend\\r\\n\\r\\n# Your NumArray object will be instantiated and called as such:\\r\\n# obj = NumArray.new(nums)\\r\\n# obj.update(i,val)\\r\\n# param_2 = obj.sum_range(i,j)\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"type NumArray struct {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\nfunc Constructor(nums []int) NumArray {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\nfunc (this *NumArray) Update(i int, val int)  {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\nfunc (this *NumArray) SumRange(i int, j int) int {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * Your NumArray object will be instantiated and called as such:\\r\\n * obj := Constructor(nums);\\r\\n * obj.Update(i,val);\\r\\n * param_2 := obj.SumRange(i,j);\\r\\n */\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"class NumArray(_nums: Array[Int]) {\\r\\n\\r\\n    def update(i: Int, `val`: Int) {\\r\\n        \\r\\n    }\\r\\n\\r\\n    def sumRange(i: Int, j: Int): Int = {\\r\\n        \\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your NumArray object will be instantiated and called as such:\\r\\n * var obj = new NumArray(nums)\\r\\n * obj.update(i,`val`)\\r\\n * var param_2 = obj.sumRange(i,j)\\r\\n */\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class NumArray(nums: IntArray) {\\r\\n\\r\\n    fun update(i: Int, `val`: Int) {\\r\\n        \\r\\n    }\\r\\n\\r\\n    fun sumRange(i: Int, j: Int): Int {\\r\\n        \\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your NumArray object will be instantiated and called as such:\\r\\n * var obj = NumArray(nums)\\r\\n * obj.update(i,`val`)\\r\\n * var param_2 = obj.sumRange(i,j)\\r\\n */\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "range-sum-query-mutable", 
    "similarQuestions": "[{\"title\": \"Range Sum Query - Immutable\", \"titleSlug\": \"range-sum-query-immutable\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query 2D - Mutable\", \"titleSlug\": \"range-sum-query-2d-mutable\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", 
    "libraryUrl": null, 
    "sessionId": "0", 
    "questionTitle": "Range Sum Query - Mutable", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}