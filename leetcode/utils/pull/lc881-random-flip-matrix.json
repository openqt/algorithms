{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "questionId": "913", 
    "questionDetailUrl": "/problems/random-flip-matrix/", 
    "infoVerified": false, 
    "questionFrontendId": "881", 
    "questionTitleSlug": "random-flip-matrix", 
    "similarQuestions": "[]", 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"swift\": [\"Swift\", \"<p>Compiled with <code>swift 4.1.2</code>.</p>\\r\\n\\r\\n<p>We usually keep up with the <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">latest Swift released by Apple</a>, if not please let us know and we will update it as soon as possible!</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "topicTags": [
      {
        "translatedName": null, 
        "name": "Random", 
        "slug": "random"
      }
    ], 
    "content": "<p>You are given the number of rows <code>n_rows</code>&nbsp;and number of columns <code>n_cols</code>&nbsp;of a&nbsp;2D&nbsp;binary matrix&nbsp;where all values are initially 0.&nbsp;Write a function <code>flip</code>&nbsp;which chooses&nbsp;a 0 value&nbsp;<a href=\"https://en.wikipedia.org/wiki/Discrete_uniform_distribution\" target=\"_blank\">uniformly at random</a>,&nbsp;changes it to 1,&nbsp;and then returns the position <code>[row.id, col.id]</code> of that value. Also, write a function <code>reset</code> which sets all values back to 0.&nbsp;<strong>Try to minimize the number of calls to system&#39;s Math.random()</strong> and optimize the time and&nbsp;space complexity.</p>\r\n\r\n<p>Note:</p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= n_rows, n_cols&nbsp;&lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= row.id &lt; n_rows</code> and <code>0 &lt;= col.id &lt; n_cols</code></li>\r\n\t<li><code>flip</code>&nbsp;will not be called when the matrix has no&nbsp;0 values left.</li>\r\n\t<li>the total number of calls to&nbsp;<code>flip</code>&nbsp;and <code>reset</code>&nbsp;will not exceed&nbsp;1000.</li>\r\n</ol>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;]\r\n</span><span id=\"example-input-1-2\">[[2,3],[],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[null,[0,1],[1,2],[1,0],[1,1]]</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: \r\n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;reset&quot;,&quot;flip&quot;]\r\n</span><span id=\"example-input-2-2\">[[1,2],[],[],[],[]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[null,[0,0],[0,1],null,[0,0]]</span></pre>\r\n</div>\r\n\r\n<p><strong>Explanation of Input Syntax:</strong></p>\r\n\r\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments. <code>Solution</code>&#39;s constructor&nbsp;has two arguments, <code>n_rows</code> and <code>n_cols</code>.&nbsp;<code>flip</code>&nbsp;and <code>reset</code> have&nbsp;no&nbsp;arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\r\n", 
    "difficulty": "Medium", 
    "libraryUrl": null, 
    "questionTitle": "Random Flip Matrix", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class Solution {\\r\\npublic:\\r\\n    Solution(int n_rows, int n_cols) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    vector<int> flip() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    void reset() {\\r\\n        \\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * Solution obj = new Solution(n_rows, n_cols);\\r\\n * vector<int> param_1 = obj.flip();\\r\\n * obj.reset();\\r\\n */\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class Solution {\\r\\n\\r\\n    public Solution(int n_rows, int n_cols) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    public int[] flip() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    public void reset() {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * Solution obj = new Solution(n_rows, n_cols);\\r\\n * int[] param_1 = obj.flip();\\r\\n * obj.reset();\\r\\n */\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class Solution(object):\\r\\n\\r\\n    def __init__(self, n_rows, n_cols):\\r\\n        \\\"\\\"\\\"\\r\\n        :type n_rows: int\\r\\n        :type n_cols: int\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def flip(self):\\r\\n        \\\"\\\"\\\"\\r\\n        :rtype: List[int]\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def reset(self):\\r\\n        \\\"\\\"\\\"\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your Solution object will be instantiated and called as such:\\r\\n# obj = Solution(n_rows, n_cols)\\r\\n# param_1 = obj.flip()\\r\\n# obj.reset()\"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class Solution:\\r\\n\\r\\n    def __init__(self, n_rows, n_cols):\\r\\n        \\\"\\\"\\\"\\r\\n        :type n_rows: int\\r\\n        :type n_cols: int\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def flip(self):\\r\\n        \\\"\\\"\\\"\\r\\n        :rtype: List[int]\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def reset(self):\\r\\n        \\\"\\\"\\\"\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your Solution object will be instantiated and called as such:\\r\\n# obj = Solution(n_rows, n_cols)\\r\\n# param_1 = obj.flip()\\r\\n# obj.reset()\"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"typedef struct {\\r\\n    \\r\\n} Solution;\\r\\n\\r\\nSolution* solutionCreate(int n_rows, int n_cols) {\\r\\n    \\r\\n}\\r\\n\\r\\nint* solutionFlip(Solution* obj, int *returnSize) {\\r\\n    \\r\\n}\\r\\n\\r\\nvoid solutionReset(Solution* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\nvoid solutionFree(Solution* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\n/**\\r\\n * Your Solution struct will be instantiated and called as such:\\r\\n * struct Solution* obj = solutionCreate(n_rows, n_cols);\\r\\n * int* param_1 = solutionFlip(obj);\\r\\n * solutionReset(obj);\\r\\n * solutionFree(obj);\\r\\n */\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class Solution {\\r\\n\\r\\n    public Solution(int n_rows, int n_cols) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    public int[] Flip() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    public void Reset() {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * Solution obj = new Solution(n_rows, n_cols);\\r\\n * int[] param_1 = obj.Flip();\\r\\n * obj.Reset();\\r\\n */\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * @param {number} n_rows\\r\\n * @param {number} n_cols\\r\\n */\\r\\nvar Solution = function(n_rows, n_cols) {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * @return {number[]}\\r\\n */\\r\\nSolution.prototype.flip = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * @return {void}\\r\\n */\\r\\nSolution.prototype.reset = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/** \\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * var obj = Object.create(Solution).createNew(n_rows, n_cols)\\r\\n * var param_1 = obj.flip()\\r\\n * obj.reset()\\r\\n */\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"class Solution\\r\\n\\r\\n=begin\\r\\n    :type n_rows: Integer\\r\\n    :type n_cols: Integer\\r\\n=end\\r\\n    def initialize(n_rows, n_cols)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    :rtype: Integer[]\\r\\n=end\\r\\n    def flip()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    :rtype: Void\\r\\n=end\\r\\n    def reset()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\nend\\r\\n\\r\\n# Your Solution object will be instantiated and called as such:\\r\\n# obj = Solution.new(n_rows, n_cols)\\r\\n# param_1 = obj.flip()\\r\\n# obj.reset()\"}, {\"value\": \"swift\", \"text\": \"Swift\", \"defaultCode\": \"class Solution {\\r\\n    func transpose(_ A: [[Int]]) -> [[Int]] {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"type Solution struct {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\nfunc Constructor(n_rows int, n_cols int) Solution {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\nfunc (this *Solution) Flip() []int {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\nfunc (this *Solution) Reset()  {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * obj := Constructor(n_rows, n_cols);\\r\\n * param_1 := obj.Flip();\\r\\n * obj.Reset();\\r\\n */\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"class Solution(_n_rows: Int, _n_cols: Int) {\\r\\n\\r\\n    def flip(): Array[Int] = {\\r\\n        \\r\\n    }\\r\\n\\r\\n    def reset() {\\r\\n        \\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * var obj = new Solution(n_rows, n_cols)\\r\\n * var param_1 = obj.flip()\\r\\n * obj.reset()\\r\\n */\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class Solution(n_rows: Int, n_cols: Int) {\\r\\n\\r\\n    fun flip(): IntArray {\\r\\n        \\r\\n    }\\r\\n\\r\\n    fun reset() {\\r\\n        \\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * var obj = Solution(n_rows, n_cols)\\r\\n * var param_1 = obj.flip()\\r\\n * obj.reset()\\r\\n */\"}]", 
    "contributors": "[{\"username\": \"1337c0d3r\", \"profileUrl\": \"/1337c0d3r/\"}]", 
    "categoryTitle": "Algorithms", 
    "article": "{\"id\": 518, \"url\": \"/articles/random-flip-matrix/\", \"topicId\": 154001}", 
    "allowDiscuss": true, 
    "metaData": "{\r\n    \"classname\": \"Solution\",\r\n    \"maxbytesperline\": 200000,\r\n    \"constructor\": {\r\n        \"params\": [\r\n            {\r\n                \"name\": \"n_rows\",\r\n                \"type\": \"integer\"\r\n            },\r\n            {\r\n                \"name\": \"n_cols\",\r\n                \"type\": \"integer\"\r\n            }\r\n        ]\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"flip\",\r\n            \"params\": [\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"integer[]\"\r\n            }\r\n        },\r\n        {\r\n            \"name\" : \"reset\",\r\n            \"params\": [\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            }\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }
}