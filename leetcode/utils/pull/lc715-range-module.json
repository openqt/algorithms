{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sessionId": "0", 
    "sampleTestCase": "[\"RangeModule\",\"addRange\",\"removeRange\",\"queryRange\",\"queryRange\",\"queryRange\"]\n[[],[10,20],[14,16],[10,14],[13,15],[16,17]]", 
    "questionFrontendId": "715", 
    "contributors": "[{\"username\": \"fishercoder\", \"profileUrl\": \"/fishercoder/\"}]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n    \"classname\": \"RangeModule\",\r\n    \"constructor\": {\r\n        \"params\": []\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"addRange\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"left\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"right\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            }\r\n        },\r\n        {\r\n            \"name\" : \"queryRange\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"left\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"right\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"boolean\"\r\n            }\r\n        },\r\n        {\r\n            \"name\" : \"removeRange\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"left\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"right\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            }\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"lefts\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"rights\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}", 
    "questionDetailUrl": "/problems/range-module/", 
    "stats": "{\"totalAccepted\": \"4.3K\", \"totalSubmission\": \"13.8K\", \"acRate\": \"30.9%\"}", 
    "interpretUrl": "/problems/range-module/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "array", 
        "name": "Array"
      }, 
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "segment-tree", 
        "name": "Segment Tree"
      }, 
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "binary-search-tree", 
        "name": "Binary Search Tree"
      }
    ], 
    "content": "<p>A Range Module is a module that tracks ranges of numbers. Your task is to design and implement the following interfaces in an efficient manner.</p>\r\n\r\n<p><li><code>addRange(int left, int right)</code> Adds the half-open interval <code>[left, right)</code>, tracking every real number in that interval.  Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval <code>[left, right)</code> that are not already tracked.</li></p>\r\n\r\n<p><li><code>queryRange(int left, int right)</code> Returns true if and only if every real number in the interval <code>[left, right)</code>\r\n is currently being tracked.</li></p>\r\n\r\n<p><li><code>removeRange(int left, int right)</code> Stops tracking every real number currently being tracked in the interval <code>[left, right)</code>.</li></p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>addRange(10, 20)</b>: null\r\n<b>removeRange(14, 16)</b>: null\r\n<b>queryRange(10, 14)</b>: true (Every number in [10, 14) is being tracked)\r\n<b>queryRange(13, 15)</b>: false (Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\r\n<b>queryRange(16, 17)</b>: true (The number 16 in [16, 17) is still being tracked, despite the remove operation)\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<li>A half open interval <code>[left, right)</code> denotes all real numbers <code>left <= x < right</code>.</li>\r\n\r\n<li><code>0 < left < right < 10^9</code> in all calls to <code>addRange, queryRange, removeRange</code>.</li>\r\n<li>The total number of calls to <code>addRange</code> in a single test case is at most <code>1000</code>.</li>\r\n<li>The total number of calls to <code>queryRange</code> in a single test case is at most <code>5000</code>.</li>\r\n<li>The total number of calls to <code>removeRange</code> in a single test case is at most <code>1000</code>.</li>\r\n</p>", 
    "enableTestMode": false, 
    "submitUrl": "/problems/range-module/submit/", 
    "questionId": "715", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Hard", 
    "allowDiscuss": true, 
    "article": "{\"id\": 268, \"url\": \"/articles/range-module/\", \"topicId\": 127671}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class RangeModule {\\npublic:\\n    RangeModule() {\\n        \\n    }\\n    \\n    void addRange(int left, int right) {\\n        \\n    }\\n    \\n    bool queryRange(int left, int right) {\\n        \\n    }\\n    \\n    void removeRange(int left, int right) {\\n        \\n    }\\n};\\n\\n/**\\n * Your RangeModule object will be instantiated and called as such:\\n * RangeModule obj = new RangeModule();\\n * obj.addRange(left,right);\\n * bool param_2 = obj.queryRange(left,right);\\n * obj.removeRange(left,right);\\n */\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class RangeModule {\\n\\n    public RangeModule() {\\n        \\n    }\\n    \\n    public void addRange(int left, int right) {\\n        \\n    }\\n    \\n    public boolean queryRange(int left, int right) {\\n        \\n    }\\n    \\n    public void removeRange(int left, int right) {\\n        \\n    }\\n}\\n\\n/**\\n * Your RangeModule object will be instantiated and called as such:\\n * RangeModule obj = new RangeModule();\\n * obj.addRange(left,right);\\n * boolean param_2 = obj.queryRange(left,right);\\n * obj.removeRange(left,right);\\n */\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class RangeModule(object):\\n\\n    def __init__(self):\\n        \\n\\n    def addRange(self, left, right):\\n        \\\"\\\"\\\"\\n        :type left: int\\n        :type right: int\\n        :rtype: void\\n        \\\"\\\"\\\"\\n        \\n\\n    def queryRange(self, left, right):\\n        \\\"\\\"\\\"\\n        :type left: int\\n        :type right: int\\n        :rtype: bool\\n        \\\"\\\"\\\"\\n        \\n\\n    def removeRange(self, left, right):\\n        \\\"\\\"\\\"\\n        :type left: int\\n        :type right: int\\n        :rtype: void\\n        \\\"\\\"\\\"\\n        \\n\\n\\n# Your RangeModule object will be instantiated and called as such:\\n# obj = RangeModule()\\n# obj.addRange(left,right)\\n# param_2 = obj.queryRange(left,right)\\n# obj.removeRange(left,right)\"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class RangeModule:\\n\\n    def __init__(self):\\n        \\n\\n    def addRange(self, left, right):\\n        \\\"\\\"\\\"\\n        :type left: int\\n        :type right: int\\n        :rtype: void\\n        \\\"\\\"\\\"\\n        \\n\\n    def queryRange(self, left, right):\\n        \\\"\\\"\\\"\\n        :type left: int\\n        :type right: int\\n        :rtype: bool\\n        \\\"\\\"\\\"\\n        \\n\\n    def removeRange(self, left, right):\\n        \\\"\\\"\\\"\\n        :type left: int\\n        :type right: int\\n        :rtype: void\\n        \\\"\\\"\\\"\\n        \\n\\n\\n# Your RangeModule object will be instantiated and called as such:\\n# obj = RangeModule()\\n# obj.addRange(left,right)\\n# param_2 = obj.queryRange(left,right)\\n# obj.removeRange(left,right)\"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"typedef struct {\\n    \\n} RangeModule;\\n\\nRangeModule* rangeModuleCreate() {\\n    \\n}\\n\\nvoid rangeModuleAddRange(RangeModule* obj, int left, int right) {\\n    \\n}\\n\\nbool rangeModuleQueryRange(RangeModule* obj, int left, int right) {\\n    \\n}\\n\\nvoid rangeModuleRemoveRange(RangeModule* obj, int left, int right) {\\n    \\n}\\n\\nvoid rangeModuleFree(RangeModule* obj) {\\n    \\n}\\n\\n/**\\n * Your RangeModule struct will be instantiated and called as such:\\n * struct RangeModule* obj = rangeModuleCreate();\\n * rangeModuleAddRange(obj, left, right);\\n * bool param_2 = rangeModuleQueryRange(obj, left, right);\\n * rangeModuleRemoveRange(obj, left, right);\\n * rangeModuleFree(obj);\\n */\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class RangeModule {\\n\\n    public RangeModule() {\\n        \\n    }\\n    \\n    public void AddRange(int left, int right) {\\n        \\n    }\\n    \\n    public bool QueryRange(int left, int right) {\\n        \\n    }\\n    \\n    public void RemoveRange(int left, int right) {\\n        \\n    }\\n}\\n\\n/**\\n * Your RangeModule object will be instantiated and called as such:\\n * RangeModule obj = new RangeModule();\\n * obj.AddRange(left,right);\\n * bool param_2 = obj.QueryRange(left,right);\\n * obj.RemoveRange(left,right);\\n */\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"\\nvar RangeModule = function() {\\n    \\n};\\n\\n/** \\n * @param {number} left \\n * @param {number} right\\n * @return {void}\\n */\\nRangeModule.prototype.addRange = function(left, right) {\\n    \\n};\\n\\n/** \\n * @param {number} left \\n * @param {number} right\\n * @return {boolean}\\n */\\nRangeModule.prototype.queryRange = function(left, right) {\\n    \\n};\\n\\n/** \\n * @param {number} left \\n * @param {number} right\\n * @return {void}\\n */\\nRangeModule.prototype.removeRange = function(left, right) {\\n    \\n};\\n\\n/** \\n * Your RangeModule object will be instantiated and called as such:\\n * var obj = Object.create(RangeModule).createNew()\\n * obj.addRange(left,right)\\n * var param_2 = obj.queryRange(left,right)\\n * obj.removeRange(left,right)\\n */\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"class RangeModule\\n    def initialize()\\n        \\n    end\\n\\n\\n=begin\\n    :type left: Integer\\n    :type right: Integer\\n    :rtype: Void\\n=end\\n    def add_range(left, right)\\n        \\n    end\\n\\n\\n=begin\\n    :type left: Integer\\n    :type right: Integer\\n    :rtype: Boolean\\n=end\\n    def query_range(left, right)\\n        \\n    end\\n\\n\\n=begin\\n    :type left: Integer\\n    :type right: Integer\\n    :rtype: Void\\n=end\\n    def remove_range(left, right)\\n        \\n    end\\n\\n\\nend\\n\\n# Your RangeModule object will be instantiated and called as such:\\n# obj = RangeModule.new()\\n# obj.add_range(left, right)\\n# param_2 = obj.query_range(left, right)\\n# obj.remove_range(left, right)\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"type RangeModule struct {\\n    \\n}\\n\\n\\nfunc Constructor() RangeModule {\\n    \\n}\\n\\n\\nfunc (this *RangeModule) AddRange(left int, right int)  {\\n    \\n}\\n\\n\\nfunc (this *RangeModule) QueryRange(left int, right int) bool {\\n    \\n}\\n\\n\\nfunc (this *RangeModule) RemoveRange(left int, right int)  {\\n    \\n}\\n\\n\\n/**\\n * Your RangeModule object will be instantiated and called as such:\\n * obj := Constructor();\\n * obj.AddRange(left,right);\\n * param_2 := obj.QueryRange(left,right);\\n * obj.RemoveRange(left,right);\\n */\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"class RangeModule() {\\n\\n    def addRange(left: Int, right: Int) {\\n        \\n    }\\n\\n    def queryRange(left: Int, right: Int): Boolean = {\\n        \\n    }\\n\\n    def removeRange(left: Int, right: Int) {\\n        \\n    }\\n\\n}\\n\\n/**\\n * Your RangeModule object will be instantiated and called as such:\\n * var obj = new RangeModule()\\n * obj.addRange(left,right)\\n * var param_2 = obj.queryRange(left,right)\\n * obj.removeRange(left,right)\\n */\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class RangeModule() {\\n\\n    fun addRange(left: Int, right: Int) {\\n        \\n    }\\n\\n    fun queryRange(left: Int, right: Int): Boolean {\\n        \\n    }\\n\\n    fun removeRange(left: Int, right: Int) {\\n        \\n    }\\n\\n}\\n\\n/**\\n * Your RangeModule object will be instantiated and called as such:\\n * var obj = RangeModule()\\n * obj.addRange(left,right)\\n * var param_2 = obj.queryRange(left,right)\\n * obj.removeRange(left,right)\\n */\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "range-module", 
    "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insert Interval\", \"titleSlug\": \"insert-interval\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Data Stream as Disjoint Intervals\", \"titleSlug\": \"data-stream-as-disjoint-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", 
    "libraryUrl": null, 
    "enableRunCode": true, 
    "questionTitle": "Range Module", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}