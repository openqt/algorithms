{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sessionId": "0", 
    "sampleTestCase": "[[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]]\n[3,2,5,4,6,1,7,0]", 
    "questionFrontendId": "851", 
    "contributors": "[{\"username\": \"awice\", \"profileUrl\": \"/awice/\"}]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n  \"name\": \"loudAndRich\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"richer\",\r\n      \"type\": \"integer[][]\"\r\n    },\r\n    {\r\n      \"name\": \"quiet\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer[]\"\r\n  }\r\n}\r\n", 
    "questionDetailUrl": "/problems/loud-and-rich/", 
    "stats": "{\"totalAccepted\": \"2.6K\", \"totalSubmission\": \"6.1K\", \"acRate\": \"42.6%\"}", 
    "interpretUrl": "/problems/loud-and-rich/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "depth-first-search", 
        "name": "Depth-first Search"
      }
    ], 
    "content": "<p>In a group of N people (labelled <code>0, 1, 2, ..., N-1</code>), each person has different amounts of money, and different levels of quietness.</p>\r\n\r\n<p>For convenience, we&#39;ll call the person with label <code>x</code>, simply &quot;person <code>x</code>&quot;.</p>\r\n\r\n<p>We&#39;ll say that <code>richer[i] = [x, y]</code> if person <code>x</code>&nbsp;definitely has more money than person&nbsp;<code>y</code>.&nbsp; Note that <code>richer</code>&nbsp;may only be a subset of valid observations.</p>\r\n\r\n<p>Also, we&#39;ll say <code>quiet[x] = q</code> if person <font face=\"monospace\">x</font>&nbsp;has quietness <code>q</code>.</p>\r\n\r\n<p>Now, return <code>answer</code>, where <code>answer[x] = y</code> if <code>y</code> is the least quiet person (that is, the person <code>y</code> with the smallest value of <code>quiet[y]</code>), among all people&nbsp;who definitely have&nbsp;equal to or more money than person <code>x</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>richer = <span id=\"example-input-1-1\">[[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]]</span>, quiet = <span id=\"example-input-1-2\">[3,2,5,4,6,1,7,0]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[5,5,2,5,4,5,6,7]</span>\r\n<strong>Explanation: </strong>\r\nanswer[0] = 5.\r\nPerson 5 has more money than 3, which has more money than 1, which has more money than 0.\r\nThe only person who is quieter (has lower quiet[x]) is person 7, but\r\nit isn&#39;t clear if they have more money than person 0.\r\n\r\nanswer[7] = 7.\r\nAmong all people that definitely have equal to or more money than person 7\r\n(which could be persons 3, 4, 5, 6, or 7), the person who is the quietest (has lower quiet[x])\r\nis person 7.\r\n\r\nThe other answers can be filled out with similar reasoning.\r\n</pre>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= quiet.length = N &lt;= 500</code></li>\r\n\t<li><code>0 &lt;= quiet[i] &lt; N</code>, all <code>quiet[i]</code> are different.</li>\r\n\t<li><code>0 &lt;= richer.length &lt;= N * (N-1) / 2</code></li>\r\n\t<li><code>0 &lt;= richer[i][j] &lt; N</code></li>\r\n\t<li><code>richer[i][0] != richer[i][1]</code></li>\r\n\t<li><code>richer[i]</code>&#39;s are all different.</li>\r\n\t<li>The&nbsp;observations in <code>richer</code> are all logically consistent.</li>\r\n</ol>", 
    "enableTestMode": false, 
    "submitUrl": "/problems/loud-and-rich/submit/", 
    "questionId": "881", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"swift\": [\"Swift\", \"<p>Compiled with <code>swift 4.1.2</code>.</p>\\r\\n\\r\\n<p>We usually keep up with the <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">latest Swift released by Apple</a>, if not please let us know and we will update it as soon as possible!</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Medium", 
    "allowDiscuss": true, 
    "article": "{\"id\": 483, \"url\": \"/articles/loud-and-rich/\", \"topicId\": 137960}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class Solution {\\npublic:\\n    vector<int> loudAndRich(vector<vector<int>>& richer, vector<int>& quiet) {\\n        \\n    }\\n};\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class Solution {\\n    public int[] loudAndRich(int[][] richer, int[] quiet) {\\n        \\n    }\\n}\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class Solution(object):\\n    def loudAndRich(self, richer, quiet):\\n        \\\"\\\"\\\"\\n        :type richer: List[List[int]]\\n        :type quiet: List[int]\\n        :rtype: List[int]\\n        \\\"\\\"\\\"\\n        \"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class Solution:\\n    def loudAndRich(self, richer, quiet):\\n        \\\"\\\"\\\"\\n        :type richer: List[List[int]]\\n        :type quiet: List[int]\\n        :rtype: List[int]\\n        \\\"\\\"\\\"\\n        \"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"/**\\n * Return an array of size *returnSize.\\n * Note: The returned array must be malloced, assume caller calls free().\\n */\\nint* loudAndRich(int** richer, int richerRowSize, int *richerColSizes, int* quiet, int quietSize, int* returnSize) {\\n    \\n}\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class Solution {\\n    public int[] LoudAndRich(int[][] richer, int[] quiet) {\\n        \\n    }\\n}\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\n * @param {number[][]} richer\\n * @param {number[]} quiet\\n * @return {number[]}\\n */\\nvar loudAndRich = function(richer, quiet) {\\n    \\n};\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"# @param {Integer[][]} richer\\n# @param {Integer[]} quiet\\n# @return {Integer[]}\\ndef loud_and_rich(richer, quiet)\\n    \\nend\"}, {\"value\": \"swift\", \"text\": \"Swift\", \"defaultCode\": \"class Solution {\\n    func loudAndRich(_ richer: [[Int]], _ quiet: [Int]) -> [Int] {\\n        \\n    }\\n}\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"func loudAndRich(richer [][]int, quiet []int) []int {\\n    \\n}\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"object Solution {\\n    def loudAndRich(richer: Array[Array[Int]], quiet: Array[Int]): Array[Int] = {\\n        \\n    }\\n}\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class Solution {\\n    fun loudAndRich(richer: Array<IntArray>, quiet: IntArray): IntArray {\\n        \\n    }\\n}\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "loud-and-rich", 
    "similarQuestions": "[]", 
    "libraryUrl": null, 
    "enableRunCode": true, 
    "questionTitle": "Loud and Rich", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}