{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sessionId": "0", 
    "sampleTestCase": "[1,2,3]", 
    "questionFrontendId": "563", 
    "contributors": "[{\"username\": \"fallcreek\", \"profileUrl\": \"/fallcreek/\"}]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n  \"name\": \"findTilt\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"root\",\r\n      \"type\": \"TreeNode\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n", 
    "questionDetailUrl": "/problems/binary-tree-tilt/", 
    "stats": "{\"totalAccepted\": \"32.4K\", \"totalSubmission\": \"68.9K\", \"acRate\": \"47.0%\"}", 
    "interpretUrl": "/problems/binary-tree-tilt/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "slug": "tree", 
        "__typename": "TopicTagNode", 
        "name": "Tree"
      }
    ], 
    "content": "<p>Given a binary tree, return the tilt of the <b>whole tree</b>.</p>\r\n\r\n<p>The tilt of a <b>tree node</b> is defined as the <b>absolute difference</b> between the sum of all left subtree node values and the sum of all right subtree node values. Null node has tilt 0.</p>\r\n\r\n<p>The tilt of the <b>whole tree</b> is defined as the sum of all nodes' tilt.</p>\r\n\r\n<p><b>Example:</b><br />\r\n<pre>\r\n<b>Input:</b> \r\n         1\r\n       /   \\\r\n      2     3\r\n<b>Output:</b> 1\r\n<b>Explanation:</b> \r\nTilt of node 2 : 0\r\nTilt of node 3 : 0\r\nTilt of node 1 : |2-3| = 1\r\nTilt of binary tree : 0 + 0 + 1 = 1\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b>\r\n<ol>\r\n<li>The sum of node values in any subtree won't exceed the range of 32-bit integer. </li>\r\n<li>All the tilt values won't exceed the range of 32-bit integer.</li>\r\n</ol>\r\n</p>", 
    "enableTestMode": false, 
    "submitUrl": "/problems/binary-tree-tilt/submit/", 
    "questionId": "563", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"swift\": [\"Swift\", \"<p>Compiled with <code>swift 4.1.2</code>.</p>\\r\\n\\r\\n<p>We usually keep up with the <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">latest Swift released by Apple</a>, if not please let us know and we will update it as soon as possible!</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Easy", 
    "allowDiscuss": true, 
    "article": "{\"id\": 115, \"url\": \"/articles/binary-tree-tilt/\", \"topicId\": 127622}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"/**\\r\\n * Definition for a binary tree node.\\r\\n * struct TreeNode {\\r\\n *     int val;\\r\\n *     TreeNode *left;\\r\\n *     TreeNode *right;\\r\\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\\r\\n * };\\r\\n */\\r\\nclass Solution {\\r\\npublic:\\r\\n    int findTilt(TreeNode* root) {\\r\\n        \\r\\n    }\\r\\n};\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"/**\\n * Definition for a binary tree node.\\n * public class TreeNode {\\n *     int val;\\n *     TreeNode left;\\n *     TreeNode right;\\n *     TreeNode(int x) { val = x; }\\n * }\\n */\\nclass Solution {\\n    public int findTilt(TreeNode root) {\\n        \\n    }\\n}\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"# Definition for a binary tree node.\\r\\n# class TreeNode(object):\\r\\n#     def __init__(self, x):\\r\\n#         self.val = x\\r\\n#         self.left = None\\r\\n#         self.right = None\\r\\n\\r\\nclass Solution(object):\\r\\n    def findTilt(self, root):\\r\\n        \\\"\\\"\\\"\\r\\n        :type root: TreeNode\\r\\n        :rtype: int\\r\\n        \\\"\\\"\\\"\\r\\n        \"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"# Definition for a binary tree node.\\n# class TreeNode:\\n#     def __init__(self, x):\\n#         self.val = x\\n#         self.left = None\\n#         self.right = None\\n\\nclass Solution:\\n    def findTilt(self, root):\\n        \\\"\\\"\\\"\\n        :type root: TreeNode\\n        :rtype: int\\n        \\\"\\\"\\\"\\n        \"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"/**\\r\\n * Definition for a binary tree node.\\r\\n * struct TreeNode {\\r\\n *     int val;\\r\\n *     struct TreeNode *left;\\r\\n *     struct TreeNode *right;\\r\\n * };\\r\\n */\\r\\nint findTilt(struct TreeNode* root) {\\r\\n    \\r\\n}\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"/**\\r\\n * Definition for a binary tree node.\\r\\n * public class TreeNode {\\r\\n *     public int val;\\r\\n *     public TreeNode left;\\r\\n *     public TreeNode right;\\r\\n *     public TreeNode(int x) { val = x; }\\r\\n * }\\r\\n */\\r\\npublic class Solution {\\r\\n    public int FindTilt(TreeNode root) {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * Definition for a binary tree node.\\r\\n * function TreeNode(val) {\\r\\n *     this.val = val;\\r\\n *     this.left = this.right = null;\\r\\n * }\\r\\n */\\r\\n/**\\r\\n * @param {TreeNode} root\\r\\n * @return {number}\\r\\n */\\r\\nvar findTilt = function(root) {\\r\\n    \\r\\n};\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"# Definition for a binary tree node.\\r\\n# class TreeNode\\r\\n#     attr_accessor :val, :left, :right\\r\\n#     def initialize(val)\\r\\n#         @val = val\\r\\n#         @left, @right = nil, nil\\r\\n#     end\\r\\n# end\\r\\n\\r\\n# @param {TreeNode} root\\r\\n# @return {Integer}\\r\\ndef find_tilt(root)\\r\\n    \\r\\nend\"}, {\"value\": \"swift\", \"text\": \"Swift\", \"defaultCode\": \"/**\\r\\n * Definition for a binary tree node.\\r\\n * public class TreeNode {\\r\\n *     public var val: Int\\r\\n *     public var left: TreeNode?\\r\\n *     public var right: TreeNode?\\r\\n *     public init(_ val: Int) {\\r\\n *         self.val = val\\r\\n *         self.left = nil\\r\\n *         self.right = nil\\r\\n *     }\\r\\n * }\\r\\n */\\r\\nclass Solution {\\r\\n    func findTilt(_ root: TreeNode?) -> Int {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"/**\\r\\n * Definition for a binary tree node.\\r\\n * type TreeNode struct {\\r\\n *     Val int\\r\\n *     Left *TreeNode\\r\\n *     Right *TreeNode\\r\\n * }\\r\\n */\\r\\nfunc findTilt(root *TreeNode) int {\\r\\n    \\r\\n}\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"/**\\n * Definition for a binary tree node.\\n * class TreeNode(var _value: Int) {\\n *   var value: Int = _value\\n *   var left: TreeNode = null\\n *   var right: TreeNode = null\\n * }\\n */\\nobject Solution {\\n    def findTilt(root: TreeNode): Int = {\\n        \\n    }\\n}\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"/**\\n * Definition for a binary tree node.\\n * class TreeNode(var `val`: Int = 0) {\\n *     var left: TreeNode? = null\\n *     var right: TreeNode? = null\\n * }\\n */\\nclass Solution {\\n    fun findTilt(root: TreeNode?): Int {\\n        \\n    }\\n}\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "binary-tree-tilt", 
    "similarQuestions": "[]", 
    "libraryUrl": null, 
    "enableRunCode": true, 
    "questionTitle": "Binary Tree Tilt", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}