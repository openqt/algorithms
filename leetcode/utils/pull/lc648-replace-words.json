{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sessionId": "0", 
    "sampleTestCase": "[\"cat\", \"bat\", \"rat\"]\n\"the cattle was rattled by the battery\"", 
    "questionFrontendId": "648", 
    "contributors": "[{\"username\": \"maxsteel\", \"profileUrl\": \"/maxsteel/\"}]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n  \"name\": \"replaceWords\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"dict\",\r\n      \"type\": \"list<string>\"\r\n    },\r\n    {\r\n      \"name\": \"sentence\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"string\"\r\n  }\r\n}\r\n", 
    "questionDetailUrl": "/problems/replace-words/", 
    "stats": "{\"totalAccepted\": \"19K\", \"totalSubmission\": \"39.2K\", \"acRate\": \"48.5%\"}", 
    "interpretUrl": "/problems/replace-words/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "slug": "hash-table", 
        "__typename": "TopicTagNode", 
        "name": "Hash Table"
      }, 
      {
        "translatedName": null, 
        "slug": "trie", 
        "__typename": "TopicTagNode", 
        "name": "Trie"
      }
    ], 
    "content": "<p>\r\nIn English, we have a concept called <code>root</code>, which can be followed by some other words to form another longer word - let's call this word <code>successor</code>. For example, the root <code>an</code>, followed by <code>other</code>, which can form another word <code>another</code>.\r\n</p>\r\n\r\n\r\n<p>\r\nNow, given a dictionary consisting of many roots and a sentence. You need to replace all the <code>successor</code> in the sentence with the <code>root</code> forming it. If a <code>successor</code> has many <code>roots</code> can form it, replace it with the root with the shortest length.\r\n</p>\r\n\r\n<p>\r\nYou need to output the sentence after the replacement.\r\n</p>\r\n\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> dict = [\"cat\", \"bat\", \"rat\"]\r\nsentence = \"the cattle was rattled by the battery\"\r\n<b>Output:</b> \"the cat was rat by the bat\"\r\n</pre>\r\n</p>\r\n\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The input will only have lower-case letters.</li>\r\n<li> 1 <= dict words number <= 1000 </li>\r\n<li> 1 <= sentence words number <= 1000  </li>\r\n<li> 1 <= root length <= 100 </li>\r\n<li> 1 <= sentence words length <= 1000 </li>\r\n</ol>\r\n</p>", 
    "enableTestMode": false, 
    "submitUrl": "/problems/replace-words/submit/", 
    "questionId": "648", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"swift\": [\"Swift\", \"<p>Compiled with <code>swift 4.1.2</code>.</p>\\r\\n\\r\\n<p>We usually keep up with the <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">latest Swift released by Apple</a>, if not please let us know and we will update it as soon as possible!</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Medium", 
    "allowDiscuss": true, 
    "article": "{\"id\": 324, \"url\": \"/articles/replace-words/\", \"topicId\": 127492}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class Solution {\\r\\npublic:\\r\\n    string replaceWords(vector<string>& dict, string sentence) {\\r\\n        \\r\\n    }\\r\\n};\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class Solution {\\n    public String replaceWords(List<String> dict, String sentence) {\\n        \\n    }\\n}\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class Solution(object):\\r\\n    def replaceWords(self, dict, sentence):\\r\\n        \\\"\\\"\\\"\\r\\n        :type dict: List[str]\\r\\n        :type sentence: str\\r\\n        :rtype: str\\r\\n        \\\"\\\"\\\"\\r\\n        \"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class Solution:\\r\\n    def replaceWords(self, dict, sentence):\\r\\n        \\\"\\\"\\\"\\r\\n        :type dict: List[str]\\r\\n        :type sentence: str\\r\\n        :rtype: str\\r\\n        \\\"\\\"\\\"\\r\\n        \"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"char* replaceWords(char** dict, int dictSize, char* sentence) {\\r\\n    \\r\\n}\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class Solution {\\r\\n    public string ReplaceWords(IList<string> dict, string sentence) {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * @param {string[]} dict\\r\\n * @param {string} sentence\\r\\n * @return {string}\\r\\n */\\r\\nvar replaceWords = function(dict, sentence) {\\r\\n    \\r\\n};\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"# @param {String[]} dict\\r\\n# @param {String} sentence\\r\\n# @return {String}\\r\\ndef replace_words(dict, sentence)\\r\\n    \\r\\nend\"}, {\"value\": \"swift\", \"text\": \"Swift\", \"defaultCode\": \"class Solution {\\r\\n    func replaceWords(_ dict: [String], _ sentence: String) -> String {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"func replaceWords(dict []string, sentence string) string {\\r\\n    \\r\\n}\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"object Solution {\\n    def replaceWords(dict: List[String], sentence: String): String = {\\n        \\n    }\\n}\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class Solution {\\n    fun replaceWords(dict: List<String>, sentence: String): String {\\n        \\n    }\\n}\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "replace-words", 
    "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]", 
    "libraryUrl": null, 
    "enableRunCode": true, 
    "questionTitle": "Replace Words", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}