{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "questionId": "384", 
    "questionDetailUrl": "/problems/shuffle-an-array/", 
    "infoVerified": false, 
    "questionFrontendId": "384", 
    "questionTitleSlug": "shuffle-an-array", 
    "similarQuestions": "[]", 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "topicTags": [], 
    "content": "<p>Shuffle a set of numbers without duplicates.\r\n</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n// Init an array with set 1, 2, and 3.\r\nint[] nums = {1,2,3};\r\nSolution solution = new Solution(nums);\r\n\r\n// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.\r\nsolution.shuffle();\r\n\r\n// Resets the array back to its original configuration [1,2,3].\r\nsolution.reset();\r\n\r\n// Returns the random shuffling of array [1,2,3].\r\nsolution.shuffle();\r\n</pre>\r\n</p>", 
    "difficulty": "Medium", 
    "libraryUrl": null, 
    "questionTitle": "Shuffle an Array", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class Solution {\\r\\npublic:\\r\\n    Solution(vector<int> nums) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Resets the array to its original configuration and return it. */\\r\\n    vector<int> reset() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns a random shuffling of the array. */\\r\\n    vector<int> shuffle() {\\r\\n        \\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * Solution obj = new Solution(nums);\\r\\n * vector<int> param_1 = obj.reset();\\r\\n * vector<int> param_2 = obj.shuffle();\\r\\n */\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class Solution {\\n\\n    public Solution(int[] nums) {\\n        \\n    }\\n    \\n    /** Resets the array to its original configuration and return it. */\\n    public int[] reset() {\\n        \\n    }\\n    \\n    /** Returns a random shuffling of the array. */\\n    public int[] shuffle() {\\n        \\n    }\\n}\\n\\n/**\\n * Your Solution object will be instantiated and called as such:\\n * Solution obj = new Solution(nums);\\n * int[] param_1 = obj.reset();\\n * int[] param_2 = obj.shuffle();\\n */\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class Solution(object):\\r\\n\\r\\n    def __init__(self, nums):\\r\\n        \\\"\\\"\\\"\\r\\n        :type nums: List[int]\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def reset(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Resets the array to its original configuration and return it.\\r\\n        :rtype: List[int]\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def shuffle(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Returns a random shuffling of the array.\\r\\n        :rtype: List[int]\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your Solution object will be instantiated and called as such:\\r\\n# obj = Solution(nums)\\r\\n# param_1 = obj.reset()\\r\\n# param_2 = obj.shuffle()\"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class Solution:\\n\\n    def __init__(self, nums):\\n        \\\"\\\"\\\"\\n        :type nums: List[int]\\n        \\\"\\\"\\\"\\n        \\n\\n    def reset(self):\\n        \\\"\\\"\\\"\\n        Resets the array to its original configuration and return it.\\n        :rtype: List[int]\\n        \\\"\\\"\\\"\\n        \\n\\n    def shuffle(self):\\n        \\\"\\\"\\\"\\n        Returns a random shuffling of the array.\\n        :rtype: List[int]\\n        \\\"\\\"\\\"\\n        \\n\\n\\n# Your Solution object will be instantiated and called as such:\\n# obj = Solution(nums)\\n# param_1 = obj.reset()\\n# param_2 = obj.shuffle()\"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"typedef struct {\\r\\n    \\r\\n} Solution;\\r\\n\\r\\nSolution* solutionCreate(int* nums, int size) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Resets the array to its original configuration and return it. */\\r\\nint* solutionReset(Solution* obj, int *returnSize) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Returns a random shuffling of the array. */\\r\\nint* solutionShuffle(Solution* obj, int *returnSize) {\\r\\n    \\r\\n}\\r\\n\\r\\nvoid solutionFree(Solution* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\n/**\\r\\n * Your Solution struct will be instantiated and called as such:\\r\\n * struct Solution* obj = solutionCreate(nums, size);\\r\\n * int* param_1 = solutionReset(obj);\\r\\n * int* param_2 = solutionShuffle(obj);\\r\\n * solutionFree(obj);\\r\\n */\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class Solution {\\r\\n\\r\\n    public Solution(int[] nums) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Resets the array to its original configuration and return it. */\\r\\n    public int[] Reset() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns a random shuffling of the array. */\\r\\n    public int[] Shuffle() {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * Solution obj = new Solution(nums);\\r\\n * int[] param_1 = obj.Reset();\\r\\n * int[] param_2 = obj.Shuffle();\\r\\n */\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * @param {number[]} nums\\r\\n */\\r\\nvar Solution = function(nums) {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Resets the array to its original configuration and return it.\\r\\n * @return {number[]}\\r\\n */\\r\\nSolution.prototype.reset = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns a random shuffling of the array.\\r\\n * @return {number[]}\\r\\n */\\r\\nSolution.prototype.shuffle = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/** \\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * var obj = Object.create(Solution).createNew(nums)\\r\\n * var param_1 = obj.reset()\\r\\n * var param_2 = obj.shuffle()\\r\\n */\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"class Solution\\r\\n\\r\\n=begin\\r\\n    :type nums: Integer[]\\r\\n=end\\r\\n    def initialize(nums)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Resets the array to its original configuration and return it.\\r\\n    :rtype: Integer[]\\r\\n=end\\r\\n    def reset()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Returns a random shuffling of the array.\\r\\n    :rtype: Integer[]\\r\\n=end\\r\\n    def shuffle()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\nend\\r\\n\\r\\n# Your Solution object will be instantiated and called as such:\\r\\n# obj = Solution.new(nums)\\r\\n# param_1 = obj.reset()\\r\\n# param_2 = obj.shuffle()\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"type Solution struct {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\nfunc Constructor(nums []int) Solution {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Resets the array to its original configuration and return it. */\\r\\nfunc (this *Solution) Reset() []int {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Returns a random shuffling of the array. */\\r\\nfunc (this *Solution) Shuffle() []int {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * Your Solution object will be instantiated and called as such:\\r\\n * obj := Constructor(nums);\\r\\n * param_1 := obj.Reset();\\r\\n * param_2 := obj.Shuffle();\\r\\n */\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"class Solution(_nums: Array[Int]) {\\n\\n    /** Resets the array to its original configuration and return it. */\\n    def reset(): Array[Int] = {\\n        \\n    }\\n\\n    /** Returns a random shuffling of the array. */\\n    def shuffle(): Array[Int] = {\\n        \\n    }\\n\\n}\\n\\n/**\\n * Your Solution object will be instantiated and called as such:\\n * var obj = new Solution(nums)\\n * var param_1 = obj.reset()\\n * var param_2 = obj.shuffle()\\n */\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class Solution(nums: IntArray) {\\n\\n    /** Resets the array to its original configuration and return it. */\\n    fun reset(): IntArray {\\n        \\n    }\\n\\n    /** Returns a random shuffling of the array. */\\n    fun shuffle(): IntArray {\\n        \\n    }\\n\\n}\\n\\n/**\\n * Your Solution object will be instantiated and called as such:\\n * var obj = Solution(nums)\\n * var param_1 = obj.reset()\\n * var param_2 = obj.shuffle()\\n */\"}]", 
    "contributors": "[]", 
    "categoryTitle": "Algorithms", 
    "article": "{\"id\": 287, \"url\": \"/articles/shuffle-an-array/\", \"topicId\": 127672}", 
    "allowDiscuss": true, 
    "metaData": "{\r\n    \"classname\": \"Solution\",\r\n    \"maxbytesperline\": 180000,\r\n    \"constructor\": {\r\n        \"params\": [\r\n            {\r\n                \"type\": \"integer[]\",\r\n                \"name\": \"nums\"\r\n            },\r\n            {\r\n                \"type\": \"integer\",\r\n                \"name\": \"size\",\r\n                \"lang\": \"c\",\r\n                \"value\": \"size_1\"\r\n            }\r\n        ]\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"reset\",\r\n            \"params\": [\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"integer[]\"\r\n            },\r\n            \"comment\": \"Resets the array to its original configuration and return it.\"\r\n        },\r\n        {\r\n            \"name\" : \"shuffle\",\r\n            \"params\": [\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"integer[]\"\r\n            },\r\n            \"comment\": \"Returns a random shuffling of the array.\"\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }
}