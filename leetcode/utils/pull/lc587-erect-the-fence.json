{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sessionId": "0", 
    "sampleTestCase": "[[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]", 
    "questionFrontendId": "587", 
    "contributors": "[{\"username\": \"vishal51\", \"profileUrl\": \"/vishal51/\"}]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n  \"name\": \"outerTrees\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"points\",\r\n      \"type\": \"Point[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"list<Point>\"\r\n  }\r\n}\r\n", 
    "questionDetailUrl": "/problems/erect-the-fence/", 
    "stats": "{\"totalAccepted\": \"4.9K\", \"totalSubmission\": \"14.6K\", \"acRate\": \"33.7%\"}", 
    "interpretUrl": "/problems/erect-the-fence/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "geometry", 
        "name": "Geometry"
      }
    ], 
    "content": "<p>There are some trees, where each tree is represented by (x,y) coordinate in a two-dimensional garden. Your job is to fence the entire garden using the <b>minimum length</b> of rope as it is expensive. The garden is well fenced only if all the trees are enclosed. Your task is to help find the coordinates of trees which are exactly located on the fence perimeter.</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\r\n<b>Output:</b> [[1,1],[2,0],[4,2],[3,3],[2,4]]\r\n<b>Explanation:</b>\r\n<img src=\"/static/images/problemset/erect_the_fence_1.png\" width = \"30%\" />\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> [[1,2],[2,2],[4,2]]\r\n<b>Output:</b> [[1,2],[2,2],[4,2]]\r\n<b>Explanation:</b>\r\n<img src=\"/static/images/problemset/erect_the_fence_2.png\" width = \"30%\" />\r\nEven you only have trees in a line, you need to use rope to enclose them. \r\n</pre>\r\n</p>\r\n\r\n<p> Note: \r\n<ol>\r\n<li>All trees should be enclosed together. You cannot cut the rope to enclose trees that will separate them in more than one group.</li>\r\n<li>All input integers will range from 0 to 100. </li>\r\n<li>The garden has at least one tree. </li>\r\n<li>All coordinates are distinct. </li>\r\n<li>Input points have <b>NO</b> order. No order required for output.</li>\r\n</ol>\r\n</p>", 
    "enableTestMode": false, 
    "submitUrl": "/problems/erect-the-fence/submit/", 
    "questionId": "587", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"swift\": [\"Swift\", \"<p>Compiled with <code>swift 4.1.2</code>.</p>\\r\\n\\r\\n<p>We usually keep up with the <a href=\\\"https://swift.org/download/\\\" target=\\\"_blank\\\">latest Swift released by Apple</a>, if not please let us know and we will update it as soon as possible!</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Hard", 
    "allowDiscuss": true, 
    "article": "{\"id\": 138, \"url\": \"/articles/erect-the-fence/\", \"topicId\": 127731}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"/**\\r\\n * Definition for a point.\\r\\n * struct Point {\\r\\n *     int x;\\r\\n *     int y;\\r\\n *     Point() : x(0), y(0) {}\\r\\n *     Point(int a, int b) : x(a), y(b) {}\\r\\n * };\\r\\n */\\r\\nclass Solution {\\r\\npublic:\\r\\n    vector<Point> outerTrees(vector<Point>& points) {\\r\\n        \\r\\n    }\\r\\n};\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"/**\\n * Definition for a point.\\n * class Point {\\n *     int x;\\n *     int y;\\n *     Point() { x = 0; y = 0; }\\n *     Point(int a, int b) { x = a; y = b; }\\n * }\\n */\\nclass Solution {\\n    public List<Point> outerTrees(Point[] points) {\\n        \\n    }\\n}\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"# Definition for a point.\\r\\n# class Point(object):\\r\\n#     def __init__(self, a=0, b=0):\\r\\n#         self.x = a\\r\\n#         self.y = b\\r\\n\\r\\nclass Solution(object):\\r\\n    def outerTrees(self, points):\\r\\n        \\\"\\\"\\\"\\r\\n        :type points: List[Point]\\r\\n        :rtype: List[Point]\\r\\n        \\\"\\\"\\\"\\r\\n        \"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class Solution:\\r\\n    def outerTrees(self, points):\\r\\n        \\\"\\\"\\\"\\r\\n        :type points: List[Point]\\r\\n        :rtype: List[Point]\\r\\n        \\\"\\\"\\\"\\r\\n        \"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"/**\\r\\n * Definition for a point.\\r\\n * struct Point {\\r\\n *     int x;\\r\\n *     int y;\\r\\n * }\\r\\n */\\r\\n/**\\r\\n * Return an array of size *returnSize.\\r\\n * Note: The returned array must be malloced, assume caller calls free().\\r\\n */\\r\\nstruct Point* outerTrees(struct Point* points, int pointsSize, int* returnSize) {\\r\\n    \\r\\n}\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"/**\\r\\n * Definition for a point.\\r\\n * public class Point {\\r\\n *     public int x;\\r\\n *     public int y;\\r\\n *     public Point() { x = 0; y = 0; }\\r\\n *     public Point(int a, int b) { x = a; y = b; }\\r\\n * }\\r\\n */\\r\\npublic class Solution {\\r\\n    public IList<Point> OuterTrees(Point[] points) {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * Definition for a point.\\r\\n * function Point(x, y) {\\r\\n *     this.x = x;\\r\\n *     this.y = y;\\r\\n * }\\r\\n */\\r\\n/**\\r\\n * @param {Point[]} points\\r\\n * @return {Point[]}\\r\\n */\\r\\nvar outerTrees = function(points) {\\r\\n    \\r\\n};\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"# Definition for a point.\\r\\n# class Point\\r\\n#     attr_accessor :x, :y\\r\\n#     def initialize(x=0, y=0)\\r\\n#         @x = x\\r\\n#         @y = y\\r\\n#     end\\r\\n# end\\r\\n\\r\\n# @param {Point[]} points\\r\\n# @return {Point[]}\\r\\ndef outer_trees(points)\\r\\n    \\r\\nend\"}, {\"value\": \"swift\", \"text\": \"Swift\", \"defaultCode\": \"/**\\r\\n * Definition for a point.\\r\\n * public class Point {\\r\\n *   public var x: Int\\r\\n *   public var y: Int\\r\\n *   public init(_ x: Int, _ y: Int) {\\r\\n *     self.x = x\\r\\n *     self.y = y\\r\\n *   }\\r\\n * }\\r\\n */\\r\\nclass Solution {\\r\\n    func outerTrees(_ points: [Point]) -> [Point] {\\r\\n        \\r\\n    }\\r\\n}\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"/**\\r\\n * Definition for a point.\\r\\n * type Point struct {\\r\\n *     X int\\r\\n *     Y int\\r\\n * }\\r\\n */\\r\\nfunc outerTrees(points []Point) []Point {\\r\\n    \\r\\n}\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"/**\\n * Definition for a point.\\n * class Point(var _x: Int, var _y: Int) {\\n *     var x: Int = _x\\n *     var y: Int = _y\\n * }\\n */\\nobject Solution {\\n    def outerTrees(points: Array[Point]): List[Point] = {\\n        \\n    }\\n}\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"/**\\n * Definition for a point.\\n * class Point(\\n *     var x: Int = 0,\\n *     var y: Int = 0\\n * )\\n */\\nclass Solution {\\n    fun outerTrees(points: Array<Point>): List<Point> {\\n        \\n    }\\n}\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "erect-the-fence", 
    "similarQuestions": "[]", 
    "libraryUrl": null, 
    "enableRunCode": true, 
    "questionTitle": "Erect the Fence", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}