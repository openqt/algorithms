{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "questionId": "817", 
    "questionDetailUrl": "/problems/design-hashmap/", 
    "infoVerified": false, 
    "questionFrontendId": "706", 
    "questionTitleSlug": "design-hashmap", 
    "similarQuestions": "[{\"title\": \"Design HashSet\", \"titleSlug\": \"design-hashset\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]", 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "topicTags": [
      {
        "translatedName": null, 
        "name": "Hash Table", 
        "slug": "hash-table"
      }, 
      {
        "translatedName": null, 
        "name": "Design", 
        "slug": "design"
      }
    ], 
    "content": "<p>Design a HashMap&nbsp;without using any built-in hash table libraries.</p>\r\n\r\n<p>To be specific, your design should include these functions:</p>\r\n\r\n<ul>\r\n\t<li><code>put(key, value)</code> :&nbsp;Insert a (key, value) pair into the HashMap. If the value already exists in the HashMap, update the value.</li>\r\n\t<li><code>get(key)</code>: Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.</li>\r\n\t<li><code>remove(key)</code> :&nbsp;Remove the mapping for the value key if this map contains the mapping for the key.</li>\r\n</ul>\r\n\r\n<p><br />\r\n<strong>Example:</strong></p>\r\n\r\n<pre>\r\nMyHashMap hashMap = new MyHashMap();\r\nhashMap.put(1, 1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\nhashMap.put(2, 2); &nbsp; &nbsp; &nbsp; &nbsp; \r\nhashMap.get(1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// returns 1\r\nhashMap.get(3); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// returns -1 (not found)\r\nhashMap.put(2, 1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// update the existing value\r\nhashMap.get(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// returns 1 \r\nhashMap.remove(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// remove the mapping for 2\r\nhashMap.get(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// returns -1 (not found) \r\n</pre>\r\n\r\n<p><br />\r\n<strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>All keys and values will be in the range of <code>[0, 1000000]</code>.</li>\r\n\t<li>The number of operations will be in the range of&nbsp;<code>[1, 10000]</code>.</li>\r\n\t<li>Please do not use the built-in HashMap library.</li>\r\n</ul>\r\n", 
    "difficulty": "Easy", 
    "libraryUrl": null, 
    "questionTitle": "Design HashMap", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class MyHashMap {\\r\\npublic:\\r\\n    /** Initialize your data structure here. */\\r\\n    MyHashMap() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** value will always be non-negative. */\\r\\n    void put(int key, int value) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\\r\\n    int get(int key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\\r\\n    void remove(int key) {\\r\\n        \\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Your MyHashMap object will be instantiated and called as such:\\r\\n * MyHashMap obj = new MyHashMap();\\r\\n * obj.put(key,value);\\r\\n * int param_2 = obj.get(key);\\r\\n * obj.remove(key);\\r\\n */\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class MyHashMap {\\r\\n\\r\\n    /** Initialize your data structure here. */\\r\\n    public MyHashMap() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** value will always be non-negative. */\\r\\n    public void put(int key, int value) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\\r\\n    public int get(int key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\\r\\n    public void remove(int key) {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your MyHashMap object will be instantiated and called as such:\\r\\n * MyHashMap obj = new MyHashMap();\\r\\n * obj.put(key,value);\\r\\n * int param_2 = obj.get(key);\\r\\n * obj.remove(key);\\r\\n */\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class MyHashMap(object):\\r\\n\\r\\n    def __init__(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Initialize your data structure here.\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def put(self, key, value):\\r\\n        \\\"\\\"\\\"\\r\\n        value will always be non-negative.\\r\\n        :type key: int\\r\\n        :type value: int\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def get(self, key):\\r\\n        \\\"\\\"\\\"\\r\\n        Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key\\r\\n        :type key: int\\r\\n        :rtype: int\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def remove(self, key):\\r\\n        \\\"\\\"\\\"\\r\\n        Removes the mapping of the specified value key if this map contains a mapping for the key\\r\\n        :type key: int\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your MyHashMap object will be instantiated and called as such:\\r\\n# obj = MyHashMap()\\r\\n# obj.put(key,value)\\r\\n# param_2 = obj.get(key)\\r\\n# obj.remove(key)\"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class MyHashMap:\\r\\n\\r\\n    def __init__(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Initialize your data structure here.\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def put(self, key, value):\\r\\n        \\\"\\\"\\\"\\r\\n        value will always be non-negative.\\r\\n        :type key: int\\r\\n        :type value: int\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def get(self, key):\\r\\n        \\\"\\\"\\\"\\r\\n        Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key\\r\\n        :type key: int\\r\\n        :rtype: int\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def remove(self, key):\\r\\n        \\\"\\\"\\\"\\r\\n        Removes the mapping of the specified value key if this map contains a mapping for the key\\r\\n        :type key: int\\r\\n        :rtype: void\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your MyHashMap object will be instantiated and called as such:\\r\\n# obj = MyHashMap()\\r\\n# obj.put(key,value)\\r\\n# param_2 = obj.get(key)\\r\\n# obj.remove(key)\"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"typedef struct {\\r\\n    \\r\\n} MyHashMap;\\r\\n\\r\\n/** Initialize your data structure here. */\\r\\nMyHashMap* myHashMapCreate() {\\r\\n    \\r\\n}\\r\\n\\r\\n/** value will always be non-negative. */\\r\\nvoid myHashMapPut(MyHashMap* obj, int key, int value) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\\r\\nint myHashMapGet(MyHashMap* obj, int key) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Removes the mapping of the specified value key if this map contains a mapping for the key */\\r\\nvoid myHashMapRemove(MyHashMap* obj, int key) {\\r\\n    \\r\\n}\\r\\n\\r\\nvoid myHashMapFree(MyHashMap* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\n/**\\r\\n * Your MyHashMap struct will be instantiated and called as such:\\r\\n * struct MyHashMap* obj = myHashMapCreate();\\r\\n * myHashMapPut(obj, key, value);\\r\\n * int param_2 = myHashMapGet(obj, key);\\r\\n * myHashMapRemove(obj, key);\\r\\n * myHashMapFree(obj);\\r\\n */\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class MyHashMap {\\r\\n\\r\\n    /** Initialize your data structure here. */\\r\\n    public MyHashMap() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** value will always be non-negative. */\\r\\n    public void Put(int key, int value) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\\r\\n    public int Get(int key) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\\r\\n    public void Remove(int key) {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your MyHashMap object will be instantiated and called as such:\\r\\n * MyHashMap obj = new MyHashMap();\\r\\n * obj.Put(key,value);\\r\\n * int param_2 = obj.Get(key);\\r\\n * obj.Remove(key);\\r\\n */\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * Initialize your data structure here.\\r\\n */\\r\\nvar MyHashMap = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * value will always be non-negative. \\r\\n * @param {number} key \\r\\n * @param {number} value\\r\\n * @return {void}\\r\\n */\\r\\nMyHashMap.prototype.put = function(key, value) {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key \\r\\n * @param {number} key\\r\\n * @return {number}\\r\\n */\\r\\nMyHashMap.prototype.get = function(key) {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes the mapping of the specified value key if this map contains a mapping for the key \\r\\n * @param {number} key\\r\\n * @return {void}\\r\\n */\\r\\nMyHashMap.prototype.remove = function(key) {\\r\\n    \\r\\n};\\r\\n\\r\\n/** \\r\\n * Your MyHashMap object will be instantiated and called as such:\\r\\n * var obj = Object.create(MyHashMap).createNew()\\r\\n * obj.put(key,value)\\r\\n * var param_2 = obj.get(key)\\r\\n * obj.remove(key)\\r\\n */\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"class MyHashMap\\r\\n\\r\\n=begin\\r\\n    Initialize your data structure here.\\r\\n=end\\r\\n    def initialize()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    value will always be non-negative.\\r\\n    :type key: Integer\\r\\n    :type value: Integer\\r\\n    :rtype: Void\\r\\n=end\\r\\n    def put(key, value)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key\\r\\n    :type key: Integer\\r\\n    :rtype: Integer\\r\\n=end\\r\\n    def get(key)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Removes the mapping of the specified value key if this map contains a mapping for the key\\r\\n    :type key: Integer\\r\\n    :rtype: Void\\r\\n=end\\r\\n    def remove(key)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\nend\\r\\n\\r\\n# Your MyHashMap object will be instantiated and called as such:\\r\\n# obj = MyHashMap.new()\\r\\n# obj.put(key, value)\\r\\n# param_2 = obj.get(key)\\r\\n# obj.remove(key)\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"type MyHashMap struct {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Initialize your data structure here. */\\r\\nfunc Constructor() MyHashMap {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** value will always be non-negative. */\\r\\nfunc (this *MyHashMap) Put(key int, value int)  {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\\r\\nfunc (this *MyHashMap) Get(key int) int {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Removes the mapping of the specified value key if this map contains a mapping for the key */\\r\\nfunc (this *MyHashMap) Remove(key int)  {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * Your MyHashMap object will be instantiated and called as such:\\r\\n * obj := Constructor();\\r\\n * obj.Put(key,value);\\r\\n * param_2 := obj.Get(key);\\r\\n * obj.Remove(key);\\r\\n */\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"class MyHashMap() {\\r\\n\\r\\n    /** Initialize your data structure here. */\\r\\n    \\r\\n\\r\\n    /** value will always be non-negative. */\\r\\n    def put(key: Int, value: Int) {\\r\\n        \\r\\n    }\\r\\n\\r\\n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\\r\\n    def get(key: Int): Int = {\\r\\n        \\r\\n    }\\r\\n\\r\\n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\\r\\n    def remove(key: Int) {\\r\\n        \\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your MyHashMap object will be instantiated and called as such:\\r\\n * var obj = new MyHashMap()\\r\\n * obj.put(key,value)\\r\\n * var param_2 = obj.get(key)\\r\\n * obj.remove(key)\\r\\n */\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class MyHashMap() {\\r\\n\\r\\n    /** Initialize your data structure here. */\\r\\n    \\r\\n\\r\\n    /** value will always be non-negative. */\\r\\n    fun put(key: Int, value: Int) {\\r\\n        \\r\\n    }\\r\\n\\r\\n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\\r\\n    fun get(key: Int): Int {\\r\\n        \\r\\n    }\\r\\n\\r\\n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\\r\\n    fun remove(key: Int) {\\r\\n        \\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your MyHashMap object will be instantiated and called as such:\\r\\n * var obj = MyHashMap()\\r\\n * obj.put(key,value)\\r\\n * var param_2 = obj.get(key)\\r\\n * obj.remove(key)\\r\\n */\"}]", 
    "contributors": "[{\"username\": \"1337c0d3r\", \"profileUrl\": \"/1337c0d3r/\"}]", 
    "categoryTitle": "Algorithms", 
    "article": "{}", 
    "allowDiscuss": true, 
    "metaData": "{\r\n    \"classname\": \"MyHashMap\",\r\n    \"maxbytesperline\": 400000,\r\n    \"constructor\": {\r\n        \"params\": [\r\n        ],\r\n        \"comment\": \"Initialize your data structure here.\"\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"put\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"key\"\r\n                },\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"value\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            },\r\n            \"comment\": \"value will always be non-negative.\"\r\n        },\r\n        {\r\n            \"name\" : \"get\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"key\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"integer\"\r\n            },\r\n            \"comment\": \"Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key\"\r\n        },\r\n        {\r\n            \"name\" : \"remove\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"key\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"void\"\r\n            },\r\n            \"comment\": \"Removes the mapping of the specified value key if this map contains a mapping for the key\"\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }
}