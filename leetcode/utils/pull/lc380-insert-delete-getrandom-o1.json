{
  "isCurrentUserAuthenticated": false, 
  "isPremium": false, 
  "question": {
    "sessionId": "0", 
    "sampleTestCase": "[\"RandomizedSet\",\"insert\",\"remove\",\"insert\",\"getRandom\",\"remove\",\"insert\",\"getRandom\"]\n[[],[1],[2],[2],[],[1],[2],[]]", 
    "questionFrontendId": "380", 
    "contributors": "[]", 
    "randomQuestionUrl": "/problems/random-one-question/", 
    "enableSubmit": true, 
    "metaData": "{\r\n    \"classname\": \"RandomizedSet\",\r\n    \"maxbytesperline\": 121000,\r\n    \"constructor\": {\r\n        \"params\": [\r\n        ],\r\n        \"comment\": \"Initialize your data structure here.\"\r\n    },\r\n    \"methods\": [\r\n        {\r\n            \"name\" : \"insert\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"val\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"boolean\"\r\n            },\r\n            \"comment\": \"Inserts a value to the set. Returns true if the set did not already contain the specified element.\"\r\n        },\r\n        {\r\n            \"name\" : \"remove\",\r\n            \"params\": [\r\n                {\r\n                    \"type\": \"integer\",\r\n                    \"name\": \"val\"\r\n                }\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"boolean\"\r\n            },\r\n            \"comment\": \"Removes a value from the set. Returns true if the set contained the specified element.\"\r\n        },\r\n        {\r\n            \"name\" : \"getRandom\",\r\n            \"params\": [\r\n            ],\r\n            \"return\": {\r\n                \"type\": \"integer\"\r\n            },\r\n            \"comment\": \"Get a random element from the set.\"\r\n        }\r\n    ],\r\n    \"systemdesign\": true,\r\n    \"params\": [\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        },\r\n        {\r\n            \"name\": \"inputs\",\r\n            \"type\": \"integer[]\"\r\n        }\r\n    ],\r\n    \"return\": {\r\n        \"type\": \"list<String>\",\r\n        \"dealloc\": true\r\n    }\r\n}", 
    "questionDetailUrl": "/problems/insert-delete-getrandom-o1/", 
    "stats": "{\"totalAccepted\": \"64.6K\", \"totalSubmission\": \"160.8K\", \"acRate\": \"40.2%\"}", 
    "interpretUrl": "/problems/insert-delete-getrandom-o1/interpret_solution/", 
    "urlManager": "{\"account_login\": \"/accounts/login/\", \"maintenance\": \"/maintenance/\", \"profile\": \"/profile/\"}", 
    "__typename": "QuestionNode", 
    "topicTags": [
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "array", 
        "name": "Array"
      }, 
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "hash-table", 
        "name": "Hash Table"
      }, 
      {
        "translatedName": null, 
        "__typename": "TopicTagNode", 
        "slug": "design", 
        "name": "Design"
      }
    ], 
    "content": "<p>Design a data structure that supports all following operations in <i>average</i> <b>O(1)</b> time.</p>\r\n\r\n<p>\r\n<ol>\r\n<li><code>insert(val)</code>: Inserts an item val to the set if not already present.</li>\r\n<li><code>remove(val)</code>: Removes an item val from the set if present.</li>\r\n<li><code>getRandom</code>: Returns a random element from current set of elements. Each element must have the <b>same probability</b> of being returned.</li>\r\n</ol>\r\n</p>\r\n\r\n<p><b>Example:</b>\r\n<pre>\r\n// Init an empty set.\r\nRandomizedSet randomSet = new RandomizedSet();\r\n\r\n// Inserts 1 to the set. Returns true as 1 was inserted successfully.\r\nrandomSet.insert(1);\r\n\r\n// Returns false as 2 does not exist in the set.\r\nrandomSet.remove(2);\r\n\r\n// Inserts 2 to the set, returns true. Set now contains [1,2].\r\nrandomSet.insert(2);\r\n\r\n// getRandom should return either 1 or 2 randomly.\r\nrandomSet.getRandom();\r\n\r\n// Removes 1 from the set, returns true. Set now contains [2].\r\nrandomSet.remove(1);\r\n\r\n// 2 was already in the set, so return false.\r\nrandomSet.insert(2);\r\n\r\n// Since 2 is the only number in the set, getRandom always return 2.\r\nrandomSet.getRandom();\r\n</pre>\r\n</p>", 
    "enableTestMode": false, 
    "submitUrl": "/problems/insert-delete-getrandom-o1/submit/", 
    "questionId": "380", 
    "infoVerified": false, 
    "translatedContent": null, 
    "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code>g++ 6.3</code> using the latest C++ 14 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p>Compiled with <code>java 1.8.0</code> taking advantage of the latest Java 8 features such as lambda expressions and stream API.</p>\\n\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"python\": [\"Python\", \"<p>Compiled with <code>python 2.7.12</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\n\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 6.3</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p>Compiled with <code>mono 5.12.0</code> providing <a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7\\\" target=\\\"_blank\\\">full support for C# 7</a>.</p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p>Run with <code>nodejs 8.8.1</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"http://underscorejs.org/\\\" target=\\\"_blank\\\">underscore.js</a> library is included by default.</p>\"], \"ruby\": [\"Ruby\", \"<p>Run with <code>ruby 2.4.1</code>.</p>\"], \"golang\": [\"Go\", \"<p>Compiled with <code>go 1.10.3</code>.</p>\"], \"python3\": [\"Python3\", \"<p>Run with <code>python 3.5.2</code>.</p>\\n\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\"], \"scala\": [\"Scala\", \"<p>Compiled with <code>scala 2.11.6</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p>Compiled with <code>kotlin 1.2.50</code>.</p>\"]}", 
    "difficulty": "Medium", 
    "allowDiscuss": true, 
    "article": "{}", 
    "codeDefinition": "[{\"value\": \"cpp\", \"text\": \"C++\", \"defaultCode\": \"class RandomizedSet {\\r\\npublic:\\r\\n    /** Initialize your data structure here. */\\r\\n    RandomizedSet() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\\r\\n    bool insert(int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Removes a value from the set. Returns true if the set contained the specified element. */\\r\\n    bool remove(int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Get a random element from the set. */\\r\\n    int getRandom() {\\r\\n        \\r\\n    }\\r\\n};\\r\\n\\r\\n/**\\r\\n * Your RandomizedSet object will be instantiated and called as such:\\r\\n * RandomizedSet obj = new RandomizedSet();\\r\\n * bool param_1 = obj.insert(val);\\r\\n * bool param_2 = obj.remove(val);\\r\\n * int param_3 = obj.getRandom();\\r\\n */\"}, {\"value\": \"java\", \"text\": \"Java\", \"defaultCode\": \"class RandomizedSet {\\r\\n\\r\\n    /** Initialize your data structure here. */\\r\\n    public RandomizedSet() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\\r\\n    public boolean insert(int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Removes a value from the set. Returns true if the set contained the specified element. */\\r\\n    public boolean remove(int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Get a random element from the set. */\\r\\n    public int getRandom() {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your RandomizedSet object will be instantiated and called as such:\\r\\n * RandomizedSet obj = new RandomizedSet();\\r\\n * boolean param_1 = obj.insert(val);\\r\\n * boolean param_2 = obj.remove(val);\\r\\n * int param_3 = obj.getRandom();\\r\\n */\"}, {\"value\": \"python\", \"text\": \"Python\", \"defaultCode\": \"class RandomizedSet(object):\\r\\n\\r\\n    def __init__(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Initialize your data structure here.\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def insert(self, val):\\r\\n        \\\"\\\"\\\"\\r\\n        Inserts a value to the set. Returns true if the set did not already contain the specified element.\\r\\n        :type val: int\\r\\n        :rtype: bool\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def remove(self, val):\\r\\n        \\\"\\\"\\\"\\r\\n        Removes a value from the set. Returns true if the set contained the specified element.\\r\\n        :type val: int\\r\\n        :rtype: bool\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def getRandom(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Get a random element from the set.\\r\\n        :rtype: int\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your RandomizedSet object will be instantiated and called as such:\\r\\n# obj = RandomizedSet()\\r\\n# param_1 = obj.insert(val)\\r\\n# param_2 = obj.remove(val)\\r\\n# param_3 = obj.getRandom()\"}, {\"value\": \"python3\", \"text\": \"Python3\", \"defaultCode\": \"class RandomizedSet:\\r\\n\\r\\n    def __init__(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Initialize your data structure here.\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def insert(self, val):\\r\\n        \\\"\\\"\\\"\\r\\n        Inserts a value to the set. Returns true if the set did not already contain the specified element.\\r\\n        :type val: int\\r\\n        :rtype: bool\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def remove(self, val):\\r\\n        \\\"\\\"\\\"\\r\\n        Removes a value from the set. Returns true if the set contained the specified element.\\r\\n        :type val: int\\r\\n        :rtype: bool\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n    def getRandom(self):\\r\\n        \\\"\\\"\\\"\\r\\n        Get a random element from the set.\\r\\n        :rtype: int\\r\\n        \\\"\\\"\\\"\\r\\n        \\r\\n\\r\\n\\r\\n# Your RandomizedSet object will be instantiated and called as such:\\r\\n# obj = RandomizedSet()\\r\\n# param_1 = obj.insert(val)\\r\\n# param_2 = obj.remove(val)\\r\\n# param_3 = obj.getRandom()\"}, {\"value\": \"c\", \"text\": \"C\", \"defaultCode\": \"typedef struct {\\r\\n    \\r\\n} RandomizedSet;\\r\\n\\r\\n/** Initialize your data structure here. */\\r\\nRandomizedSet* randomizedSetCreate() {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\\r\\nbool randomizedSetInsert(RandomizedSet* obj, int val) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Removes a value from the set. Returns true if the set contained the specified element. */\\r\\nbool randomizedSetRemove(RandomizedSet* obj, int val) {\\r\\n    \\r\\n}\\r\\n\\r\\n/** Get a random element from the set. */\\r\\nint randomizedSetGetRandom(RandomizedSet* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\nvoid randomizedSetFree(RandomizedSet* obj) {\\r\\n    \\r\\n}\\r\\n\\r\\n/**\\r\\n * Your RandomizedSet struct will be instantiated and called as such:\\r\\n * struct RandomizedSet* obj = randomizedSetCreate();\\r\\n * bool param_1 = randomizedSetInsert(obj, val);\\r\\n * bool param_2 = randomizedSetRemove(obj, val);\\r\\n * int param_3 = randomizedSetGetRandom(obj);\\r\\n * randomizedSetFree(obj);\\r\\n */\"}, {\"value\": \"csharp\", \"text\": \"C#\", \"defaultCode\": \"public class RandomizedSet {\\r\\n\\r\\n    /** Initialize your data structure here. */\\r\\n    public RandomizedSet() {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\\r\\n    public bool Insert(int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Removes a value from the set. Returns true if the set contained the specified element. */\\r\\n    public bool Remove(int val) {\\r\\n        \\r\\n    }\\r\\n    \\r\\n    /** Get a random element from the set. */\\r\\n    public int GetRandom() {\\r\\n        \\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Your RandomizedSet object will be instantiated and called as such:\\r\\n * RandomizedSet obj = new RandomizedSet();\\r\\n * bool param_1 = obj.Insert(val);\\r\\n * bool param_2 = obj.Remove(val);\\r\\n * int param_3 = obj.GetRandom();\\r\\n */\"}, {\"value\": \"javascript\", \"text\": \"JavaScript\", \"defaultCode\": \"/**\\r\\n * Initialize your data structure here.\\r\\n */\\r\\nvar RandomizedSet = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Inserts a value to the set. Returns true if the set did not already contain the specified element. \\r\\n * @param {number} val\\r\\n * @return {boolean}\\r\\n */\\r\\nRandomizedSet.prototype.insert = function(val) {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Removes a value from the set. Returns true if the set contained the specified element. \\r\\n * @param {number} val\\r\\n * @return {boolean}\\r\\n */\\r\\nRandomizedSet.prototype.remove = function(val) {\\r\\n    \\r\\n};\\r\\n\\r\\n/**\\r\\n * Get a random element from the set.\\r\\n * @return {number}\\r\\n */\\r\\nRandomizedSet.prototype.getRandom = function() {\\r\\n    \\r\\n};\\r\\n\\r\\n/** \\r\\n * Your RandomizedSet object will be instantiated and called as such:\\r\\n * var obj = Object.create(RandomizedSet).createNew()\\r\\n * var param_1 = obj.insert(val)\\r\\n * var param_2 = obj.remove(val)\\r\\n * var param_3 = obj.getRandom()\\r\\n */\"}, {\"value\": \"ruby\", \"text\": \"Ruby\", \"defaultCode\": \"class RandomizedSet\\r\\n\\r\\n=begin\\r\\n    Initialize your data structure here.\\r\\n=end\\r\\n    def initialize()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Inserts a value to the set. Returns true if the set did not already contain the specified element.\\r\\n    :type val: Integer\\r\\n    :rtype: Boolean\\r\\n=end\\r\\n    def insert(val)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Removes a value from the set. Returns true if the set contained the specified element.\\r\\n    :type val: Integer\\r\\n    :rtype: Boolean\\r\\n=end\\r\\n    def remove(val)\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\n=begin\\r\\n    Get a random element from the set.\\r\\n    :rtype: Integer\\r\\n=end\\r\\n    def get_random()\\r\\n        \\r\\n    end\\r\\n\\r\\n\\r\\nend\\r\\n\\r\\n# Your RandomizedSet object will be instantiated and called as such:\\r\\n# obj = RandomizedSet.new()\\r\\n# param_1 = obj.insert(val)\\r\\n# param_2 = obj.remove(val)\\r\\n# param_3 = obj.get_random()\"}, {\"value\": \"golang\", \"text\": \"Go\", \"defaultCode\": \"type RandomizedSet struct {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Initialize your data structure here. */\\r\\nfunc Constructor() RandomizedSet {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\\r\\nfunc (this *RandomizedSet) Insert(val int) bool {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Removes a value from the set. Returns true if the set contained the specified element. */\\r\\nfunc (this *RandomizedSet) Remove(val int) bool {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/** Get a random element from the set. */\\r\\nfunc (this *RandomizedSet) GetRandom() int {\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/**\\r\\n * Your RandomizedSet object will be instantiated and called as such:\\r\\n * obj := Constructor();\\r\\n * param_1 := obj.Insert(val);\\r\\n * param_2 := obj.Remove(val);\\r\\n * param_3 := obj.GetRandom();\\r\\n */\"}, {\"value\": \"scala\", \"text\": \"Scala\", \"defaultCode\": \"class RandomizedSet() {\\n\\n    /** Initialize your data structure here. */\\n    \\n\\n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\\n    def insert(`val`: Int): Boolean = {\\n        \\n    }\\n\\n    /** Removes a value from the set. Returns true if the set contained the specified element. */\\n    def remove(`val`: Int): Boolean = {\\n        \\n    }\\n\\n    /** Get a random element from the set. */\\n    def getRandom(): Int = {\\n        \\n    }\\n\\n}\\n\\n/**\\n * Your RandomizedSet object will be instantiated and called as such:\\n * var obj = new RandomizedSet()\\n * var param_1 = obj.insert(`val`)\\n * var param_2 = obj.remove(`val`)\\n * var param_3 = obj.getRandom()\\n */\"}, {\"value\": \"kotlin\", \"text\": \"Kotlin\", \"defaultCode\": \"class RandomizedSet() {\\n\\n    /** Initialize your data structure here. */\\n    \\n\\n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\\n    fun insert(`val`: Int): Boolean {\\n        \\n    }\\n\\n    /** Removes a value from the set. Returns true if the set contained the specified element. */\\n    fun remove(`val`: Int): Boolean {\\n        \\n    }\\n\\n    /** Get a random element from the set. */\\n    fun getRandom(): Int {\\n        \\n    }\\n\\n}\\n\\n/**\\n * Your RandomizedSet object will be instantiated and called as such:\\n * var obj = RandomizedSet()\\n * var param_1 = obj.insert(`val`)\\n * var param_2 = obj.remove(`val`)\\n * var param_3 = obj.getRandom()\\n */\"}]", 
    "judgerAvailable": true, 
    "questionTitleSlug": "insert-delete-getrandom-o1", 
    "similarQuestions": "[{\"title\": \"Insert Delete GetRandom O(1) - Duplicates allowed\", \"titleSlug\": \"insert-delete-getrandom-o1-duplicates-allowed\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]", 
    "libraryUrl": null, 
    "enableRunCode": true, 
    "questionTitle": "Insert Delete GetRandom O(1)", 
    "categoryTitle": "Algorithms", 
    "mysqlSchemas": [], 
    "translatedTitle": null
  }, 
  "loginUrl": "/accounts/login/", 
  "subscribeUrl": "/subscribe/"
}